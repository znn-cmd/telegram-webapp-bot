#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∞–¥—Ä–µ—Å–∞
"""

import requests
import json

def test_google_geocoding():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    
    # URL API
    url = "http://localhost:5000/api/geocode"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∞–¥—Ä–µ—Å–∞
    test_addresses = [
        "Ulus, 2105. Sk. No:4, 07025 Kepez/Antalya, T√ºrkiye",
        "Baraj, 5890. Sk. No:584, 07320 Kepez/Antalya, T√ºrkiye",
        "Avsallar, Cengiz Akay Sk. No:12, 07410 Alanya/Antalya, T√ºrkiye",
        "Zerdalilik, 07100 Muratpa≈üa/Antalya, T√ºrkiye"
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è\n")
    
    for i, address in enumerate(test_addresses, 1):
        print(f"–¢–µ—Å—Ç {i}: {address}")
        print("-" * 60)
        
        try:
            response = requests.post(url, json={'address': address})
            
            if response.status_code == 200:
                result = response.json()
                
                if result.get('success'):
                    print("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:")
                    print(f"  - Formatted Address: {result.get('formatted_address')}")
                    print(f"  - Lat: {result.get('lat')}")
                    print(f"  - Lng: {result.get('lng')}")
                    
                    if result.get('location_components'):
                        components = result['location_components']
                        print("\nüìä –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–¥—Ä–µ—Å–∞:")
                        print(f"  - Country: {components.get('country')}")
                        print(f"  - Country Code: {components.get('country_code')}")
                        print(f"  - City: {components.get('city')}")
                        print(f"  - District: {components.get('district')}")
                        print(f"  - County: {components.get('county')}")
                        print(f"  - Postal Code: {components.get('postal_code')}")
                    
                    if result.get('location_codes'):
                        codes = result['location_codes']
                        print("\nüéØ –ö–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π:")
                        print(f"  - Country ID: {codes.get('country_id')}")
                        print(f"  - City ID: {codes.get('city_id')}")
                        print(f"  - District ID: {codes.get('district_id')}")
                        print(f"  - County ID: {codes.get('county_id')}")
                        print(f"  - Country: {codes.get('country_name')}")
                        print(f"  - City: {codes.get('city_name')}")
                        print(f"  - District: {codes.get('district_name')}")
                        print(f"  - County: {codes.get('county_name')}")
                    else:
                        print("\n‚ùå –ö–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error')}")
            else:
                print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
                print(f"Response: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
        
        print("\n" + "=" * 60 + "\n")

if __name__ == "__main__":
    test_google_geocoding() 