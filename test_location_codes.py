#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–¥–æ–≤ –ª–æ–∫–∞—Ü–∏–π
"""

import os
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
from supabase import create_client, Client

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase
supabase_url = os.getenv("SUPABASE_URL")
supabase_key = os.getenv("SUPABASE_ANON_KEY")

if not supabase_url or not supabase_key:
    print("‚ùå –û—à–∏–±–∫–∞: SUPABASE_URL –∏ SUPABASE_ANON_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    sys.exit(1)

supabase: Client = create_client(supabase_url, supabase_key)

def get_location_codes(city_name, district_name, county_name):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã locations –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º
    
    Args:
        city_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
        district_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–π–æ–Ω–∞
        county_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –æ–∫—Ä—É–≥–∞/–ø—Ä–æ–≤–∏–Ω—Ü–∏–∏
    
    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å –∫–æ–¥–∞–º–∏ –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
    """
    try:
        location_codes = {
            'city_code': None,
            'district_code': None,
            'county_code': None
        }
        
        print(f"\nüîç –ü–æ–∏—Å–∫ –∫–æ–¥–æ–≤ –¥–ª—è:")
        print(f"   –ì–æ—Ä–æ–¥: {city_name}")
        print(f"   –†–∞–π–æ–Ω: {district_name}")
        print(f"   –û–∫—Ä—É–≥: {county_name}")
        
        # –ò—â–µ–º –∑–∞–ø–∏—Å—å —Å —Ç–æ—á–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        print(f"\nüìã –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:")
        print(f"   city_name: {city_name}")
        print(f"   district_name: {district_name}")
        print(f"   county_name: {county_name}")
        
        query = supabase.table('locations').select('*')
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –≤—Å–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
        if city_name:
            query = query.eq('city_name', city_name)
        if district_name:
            query = query.eq('district_name', district_name)
        if county_name:
            query = query.eq('county_name', county_name)
            
        result = query.execute()
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞: {len(result.data)} –∑–∞–ø–∏—Å–µ–π")
        
        if result.data:
            for record in result.data:
                print(f"   –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å: {record}")
                location_codes['city_code'] = record.get('city_id')
                location_codes['district_code'] = record.get('district_id')
                location_codes['county_code'] = record.get('county_id')
                print(f"   ‚úÖ –ö–æ–¥—ã –Ω–∞–π–¥–µ–Ω—ã: city_id={location_codes['city_code']}, district_id={location_codes['district_code']}, county_id={location_codes['county_code']}")
        else:
            print(f"   ‚ùå –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–∞—Å—Ç–∏—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
            print(f"\nüîç –ü–æ–∏—Å–∫ —á–∞—Å—Ç–∏—á–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π...")
            
            # –ü–æ–∏—Å–∫ –ø–æ —Ä–∞–π–æ–Ω—É
            if district_name:
                district_result = supabase.table('locations').select('*').eq('district_name', district_name).execute()
                if district_result.data:
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –ø–æ —Ä–∞–π–æ–Ω—É '{district_name}':")
                    for record in district_result.data:
                        print(f"      {record}")
                    location_codes['district_code'] = district_result.data[0].get('district_id')
            
            # –ü–æ–∏—Å–∫ –ø–æ –æ–∫—Ä—É–≥—É
            if county_name:
                county_result = supabase.table('locations').select('*').eq('county_name', county_name).execute()
                if county_result.data:
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –ø–æ –æ–∫—Ä—É–≥—É '{county_name}':")
                    for record in county_result.data:
                        print(f"      {record}")
                    location_codes['county_code'] = county_result.data[0].get('county_id')
            
            # –ü–æ–∏—Å–∫ –ø–æ –≥–æ—Ä–æ–¥—É
            if city_name:
                city_result = supabase.table('locations').select('*').eq('city_name', city_name).execute()
                if city_result.data:
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –ø–æ –≥–æ—Ä–æ–¥—É '{city_name}':")
                    for record in city_result.data:
                        print(f"      {record}")
                    location_codes['city_code'] = city_result.data[0].get('city_id')
        
        print(f"\nüìä –ò—Ç–æ–≥–æ–≤—ã–µ –∫–æ–¥—ã: {location_codes}")
        return location_codes
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–æ–≤ –ª–æ–∫–∞—Ü–∏–π: {e}")
        return None

def extract_location_from_address(address):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –≥–æ—Ä–æ–¥, —Ä–∞–π–æ–Ω –∏ –æ–∫—Ä—É–≥ –∏–∑ –∞–¥—Ä–µ—Å–∞
    """
    try:
        print(f"\nüìç –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ –∞–¥—Ä–µ—Å–∞: {address}")
        
        # –£–ª—É—á—à–µ–Ω–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–ª—è —Ç—É—Ä–µ—Ü–∫–∏—Ö –∞–¥—Ä–µ—Å–æ–≤
        address_parts = address.split(',')
        
        location_data = {
            'city_name': None,
            'district_name': None,
            'county_name': None
        }
        
        print(f"   –ß–∞—Å—Ç–∏ –∞–¥—Ä–µ—Å–∞: {address_parts}")
        
        if len(address_parts) >= 3:
            # –î–ª—è –∞–¥—Ä–µ—Å–∞: "Antalya, Alanya, Avsallar Mah., Cengiz Akay Sok., 12B"
            # –ü–µ—Ä–≤–∞—è —á–∞—Å—Ç—å: –≥–æ—Ä–æ–¥ (Antalya) - —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –≥–æ—Ä–æ–¥
            location_data['city_name'] = address_parts[0].strip()
            
            # –í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å: –æ–∫—Ä—É–≥/—Ä–∞–π–æ–Ω (Alanya) - —ç—Ç–æ –æ–∫—Ä—É–≥
            location_data['county_name'] = address_parts[1].strip()
            
            # –¢—Ä–µ—Ç—å—è —á–∞—Å—Ç—å: —Ä–∞–π–æ–Ω (Avsallar Mah.) - —ç—Ç–æ —Ä–∞–π–æ–Ω
            district_name = address_parts[2].strip()
            # –£–±–∏—Ä–∞–µ–º —Å—É—Ñ—Ñ–∏–∫—Å—ã —Ç–∏–ø–∞ "Mah.", "Mahallesi", "Sok." –∏ —Ç.–¥.
            district_name = district_name.replace(' Mah.', '').replace(' Mahallesi', '').replace(' Sok.', '').replace(' Sk.', '')
            location_data['district_name'] = district_name
                
        elif len(address_parts) >= 2:
            # –ü—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º–∞—Ç
            location_data['district_name'] = address_parts[0].strip()
            location_data['city_name'] = address_parts[1].strip()
        
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
        if not location_data['city_name']:
            location_data['city_name'] = 'Alanya'  # Default –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞
        if not location_data['district_name']:
            location_data['district_name'] = 'Avsallar'  # Default —Ä–∞–π–æ–Ω
        if not location_data['county_name']:
            location_data['county_name'] = 'Antalya'  # Default –ø—Ä–æ–≤–∏–Ω—Ü–∏—è
        
        print(f"   ‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {location_data}")
        return location_data
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ –∞–¥—Ä–µ—Å–∞: {e}")
        return {
            'city_name': 'Alanya',
            'district_name': 'Avsallar', 
            'county_name': 'Antalya'
        }

def check_locations_table():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã locations
    """
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã locations")
    print("=" * 40)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã locations
        result = supabase.table('locations').select('*').execute()
        
        if result.data:
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ locations –Ω–∞–π–¥–µ–Ω–∞, –∑–∞–ø–∏—Å–µ–π: {len(result.data)}")
            print(f"üìã –í—Å–µ –∑–∞–ø–∏—Å–∏:")
            for i, record in enumerate(result.data):
                print(f"   –ó–∞–ø–∏—Å—å {i+1}: {record}")
        else:
            print("‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ locations –ø—É—Å—Ç–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã locations: {e}")

def test_address_parsing():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –∞–¥—Ä–µ—Å–∞ –∏ –ø–æ–∏—Å–∫ –∫–æ–¥–æ–≤
    """
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–¥–æ–≤ –ª–æ–∫–∞—Ü–∏–π")
    print("=" * 60)
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    check_locations_table()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å
    test_address = "Antalya, Alanya, Avsallar Mah., Cengiz Akay Sok., 12B"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ª–æ–∫–∞—Ü–∏—é –∏–∑ –∞–¥—Ä–µ—Å–∞
    location_data = extract_location_from_address(test_address)
    
    if location_data:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π
        location_codes = get_location_codes(
            location_data['city_name'],
            location_data['district_name'], 
            location_data['county_name']
        )
        
        print(f"\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:")
        print(f"   –ê–¥—Ä–µ—Å: {test_address}")
        print(f"   –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {location_data}")
        print(f"   –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–¥—ã: {location_codes}")
        
        if location_codes:
            print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"\n‚ö†Ô∏è  –ö–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
    else:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∞–¥—Ä–µ—Å–∞")

if __name__ == "__main__":
    test_address_parsing() 