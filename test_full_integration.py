#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–∞–ª—é—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import requests
import logging
from datetime import datetime
from supabase import create_client, Client
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase
supabase_url = os.getenv("SUPABASE_URL")
supabase_key = os.getenv("SUPABASE_ANON_KEY")
if not supabase_url or not supabase_key:
    raise RuntimeError("SUPABASE_URL –∏ SUPABASE_ANON_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
supabase: Client = create_client(supabase_url, supabase_key)

def test_full_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤–∞–ª—é—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤"""
    
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–∞–ª—é—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤")
    print("=" * 60)
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
    try:
        from currency_functions import get_currency_rate_for_date, convert_turkish_data_to_eur, is_turkish_location
        print("‚úÖ –í–∞–ª—é—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    except ImportError:
        try:
            from currency_functions_v2 import get_currency_rate_for_date, convert_turkish_data_to_eur, is_turkish_location
            print("‚úÖ –í–∞–ª—é—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ v2 –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        except ImportError:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")
            return False
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
    print("\nüîç –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç")
    print("-" * 40)
    
    currency_rate = get_currency_rate_for_date()
    if currency_rate:
        print(f"‚úÖ –ö—É—Ä—Å –≤–∞–ª—é—Ç –ø–æ–ª—É—á–µ–Ω: {currency_rate.get('try', '–Ω/–¥')} TRY/EUR")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç")
        return False
    
    # –¢–µ—Å—Ç 2: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—É—Ä–µ—Ü–∫–∏—Ö –ª–æ–∫–∞—Ü–∏–π
    print("\nüîç –¢–µ—Å—Ç 2: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—É—Ä–µ—Ü–∫–∏—Ö –ª–æ–∫–∞—Ü–∏–π")
    print("-" * 40)
    
    test_locations = [
        {'country': 'Turkey', 'country_code': 'TR'},
        {'country': 'T√ºrkiye', 'country_code': 'TR'},
        {'country': 'Germany', 'country_code': 'DE'},
    ]
    
    for location in test_locations:
        is_turkish = is_turkish_location(location)
        status = "üáπüá∑ –¢—É—Ä–µ—Ü–∫–∞—è" if is_turkish else "üåç –ù–µ —Ç—É—Ä–µ—Ü–∫–∞—è"
        print(f"üìç {location['country']} ({location['country_code']}): {status}")
    
    # –¢–µ—Å—Ç 3: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    print("\nüîç –¢–µ—Å—Ç 3: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö")
    print("-" * 40)
    
    test_data = {
        'general_data': {
            'unit_price_for_sale': 1000.0,
            'min_unit_price_for_sale': 800.0,
            'max_unit_price_for_sale': 1200.0,
            'unit_price_for_rent': 50.0,
            'min_unit_price_for_rent': 40.0,
            'max_unit_price_for_rent': 60.0,
            'price_for_sale': 50000.0,
            'price_for_rent': 2500.0,
        },
        'property_trends': [
            {
                'unit_price_for_sale': 1100.0,
                'unit_price_for_rent': 55.0,
            }
        ]
    }
    
    converted_data = convert_turkish_data_to_eur(test_data, currency_rate)
    
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:")
    if 'general_data' in converted_data:
        general = converted_data['general_data']
        print(f"   unit_price_for_sale: {general.get('unit_price_for_sale', '–Ω/–¥')} EUR")
        print(f"   unit_price_for_rent: {general.get('unit_price_for_rent', '–Ω/–¥')} EUR")
    
    # –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    print("\nüîç –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç—á–µ—Ç–∞")
    print("-" * 40)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞
    address = "Istanbul, Turkey"
    bedrooms = 3
    price = 100000
    location_codes = {
        'country_name': 'T√ºrkiye',
        'city_name': 'Istanbul',
        'district_name': 'Kadƒ±k√∂y'
    }
    location_components = {
        'country': 'Turkey',
        'country_code': 'TR',
        'city': 'Istanbul'
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ª–æ–∫–∞—Ü–∏—è —Ç—É—Ä–µ—Ü–∫–æ–π
    is_turkish = is_turkish_location(location_components)
    print(f"üìç –ê–¥—Ä–µ—Å: {address}")
    print(f"üè† –°–ø–∞–ª—å–Ω–∏: {bedrooms}")
    print(f"üí∞ –¶–µ–Ω–∞: {price} EUR")
    print(f"üáπüá∑ –¢—É—Ä–µ—Ü–∫–∞—è –ª–æ–∫–∞—Ü–∏—è: {'–î–∞' if is_turkish else '–ù–µ—Ç'}")
    
    if is_turkish:
        print(f"üí± –ö—É—Ä—Å –≤–∞–ª—é—Ç—ã: 1 EUR = {currency_rate.get('try', '–Ω/–¥')} TRY")
        print(f"üìÖ –î–∞—Ç–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime('%d.%m.%Y')}")
    
    print("\n" + "=" * 60)
    print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–∞–ª—é—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    return True

if __name__ == "__main__":
    success = test_full_integration()
    if success:
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.")
