#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∏—Å–∫–∞ –∞–¥—Ä–µ—Å–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    from app import supabase
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

def test_database_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ –∞–¥—Ä–µ—Å–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å
    test_address = "Baraj, 5890. Sk. No:584, 07320 Kepez/Antalya, –¢—É—Ä—Ü–∏—è"
    print(f"üìç –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å: {test_address}")
    
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        search_terms = [word.strip() for word in test_address.replace(',', ' ').replace('.', ' ').split() if len(word.strip()) > 2]
        print(f"üîç –ü–æ–∏—Å–∫–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã: {search_terms}")
        
        # –ò—â–µ–º –≤ —Ç–∞–±–ª–∏—Ü–µ locations
        search_query = supabase.table('locations').select('*')
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        for term in search_terms[:3]:
            if term.lower() not in ['—Ç—É—Ä—Ü–∏—è', 't√ºrkiye', 'antalya', 'kepez']:
                print(f"üîç –ò—â–µ–º —Ç–µ—Ä–º–∏–Ω: {term}")
                search_query = search_query.or_(f"district_name.ilike.%{term}%,county_name.ilike.%{term}%,city_name.ilike.%{term}%")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
        print("üîç –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        search_result = search_query.execute()
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞: {len(search_result.data)} –∑–∞–ø–∏—Å–µ–π")
        
        if search_result.data:
            print("‚úÖ –ù–∞–π–¥–µ–Ω—ã –ª–æ–∫–∞—Ü–∏–∏:")
            for i, location in enumerate(search_result.data[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  {i+1}. {location.get('district_name', 'N/A')}, {location.get('county_name', 'N/A')}, {location.get('city_name', 'N/A')}")
                print(f"     –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {location.get('latitude', 'N/A')}, {location.get('longitude', 'N/A')}")
                print(f"     ID: {location.get('id', 'N/A')}")
                print()
        else:
            print("‚ùå –õ–æ–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –±–æ–ª–µ–µ —à–∏—Ä–æ–∫–∏–π –ø–æ–∏—Å–∫
            print("üîç –ü–æ–ø—Ä–æ–±—É–µ–º –±–æ–ª–µ–µ —à–∏—Ä–æ–∫–∏–π –ø–æ–∏—Å–∫...")
            wide_search = supabase.table('locations').select('*').eq('country_name', 'T√ºrkiye').eq('city_name', 'Antalya').execute()
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ª–æ–∫–∞—Ü–∏–π –≤ –ê–Ω—Ç–∞–ª—å–µ: {len(wide_search.data)}")
            
            if wide_search.data:
                print("üìç –ü—Ä–∏–º–µ—Ä—ã –ª–æ–∫–∞—Ü–∏–π –≤ –ê–Ω—Ç–∞–ª—å–µ:")
                for i, location in enumerate(wide_search.data[:5]):
                    print(f"  {i+1}. {location.get('district_name', 'N/A')}, {location.get('county_name', 'N/A')}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
        import traceback
        traceback.print_exc()

def test_specific_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π"""
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π")
    print("=" * 50)
    
    try:
        # –ü–æ–∏—Å–∫ –ø–æ —Ä–∞–π–æ–Ω—É Baraj
        print("üîç –ü–æ–∏—Å–∫ –ø–æ —Ä–∞–π–æ–Ω—É 'Baraj'...")
        baraj_search = supabase.table('locations').select('*').ilike('district_name', '%Baraj%').execute()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ª–æ–∫–∞—Ü–∏–π —Å 'Baraj': {len(baraj_search.data)}")
        
        if baraj_search.data:
            for location in baraj_search.data:
                print(f"  ‚úÖ {location.get('district_name')}, {location.get('county_name')}, {location.get('city_name')}")
        
        # –ü–æ–∏—Å–∫ –ø–æ –≥–æ—Ä–æ–¥—É Antalya
        print("\nüîç –ü–æ–∏—Å–∫ –ø–æ –≥–æ—Ä–æ–¥—É 'Antalya'...")
        antalya_search = supabase.table('locations').select('*').eq('city_name', 'Antalya').execute()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ª–æ–∫–∞—Ü–∏–π –≤ –ê–Ω—Ç–∞–ª—å–µ: {len(antalya_search.data)}")
        
        if antalya_search.data:
            print("üìç –†–∞–π–æ–Ω—ã –≤ –ê–Ω—Ç–∞–ª—å–µ:")
            districts = set()
            for location in antalya_search.data:
                district = location.get('district_name')
                if district:
                    districts.add(district)
            
            for district in sorted(list(districts))[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                print(f"  ‚Ä¢ {district}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –∞–¥—Ä–µ—Å–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
    test_database_search()
    test_specific_search()
    
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ï—Å–ª–∏ –ª–æ–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è")
    print("2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –æ–±—â–∏–µ —Ç–µ—Ä–º–∏–Ω—ã")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É locations")

if __name__ == "__main__":
    main()
