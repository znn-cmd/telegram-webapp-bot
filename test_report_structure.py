#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç—á–µ—Ç–∞
"""

import requests
import json

def test_report_structure():
    """–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç—á–µ—Ç–∞"""
    url = "http://localhost:8080/api/generate_report"
    
    data = {
        "address": "Baraj, 5890. Sk. No:584, 07320 Kepez/Antalya, T√ºrkiye",
        "bedrooms": 3,
        "price": 111000,
        "lat": 36.8969,
        "lng": 30.7133,
        "language": "ru",
        "telegram_id": 1952374904
    }
    
    try:
        print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç—á–µ—Ç–∞")
        
        response = requests.post(url, json=data)
        print(f"üì° Status Code: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            report_text = result.get('report_text', '')
            
            print(f"‚úÖ –û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"üìä –†–∞–∑–º–µ—Ä –æ—Ç—á–µ—Ç–∞: {len(report_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç—á–µ—Ç–∞
            lines = report_text.split('\n')
            
            print(f"\nüìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç—á–µ—Ç–∞:")
            print("=" * 50)
            
            # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–µ–∫—Ü–∏–∏
            sections = {
                '–ö–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π': False,
                'Google Places API': False,
                'Nominatim': False,
                '–û–±—â–∏–π —Ç—Ä–µ–Ω–¥': False,
                '–¢—Ä–µ–Ω–¥ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–ø–∞–ª–µ–Ω': False,
                '–¢—Ä–µ–Ω–¥ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –æ–±—ä–µ–∫—Ç–∞': False,
                '–¢—Ä–µ–Ω–¥ –ø–æ —ç—Ç–∞–∂—É –æ–±—ä–µ–∫—Ç–∞': False,
                '–¢—Ä–µ–Ω–¥ –ø–æ —Ç–∏–ø—É –æ—Ç–æ–ø–ª–µ–Ω–∏—è': False
            }
            
            for i, line in enumerate(lines):
                line = line.strip()
                if not line:
                    continue
                    
                if '=== –ö–û–î–´ –õ–û–ö–ê–¶–ò–ô (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤) ===' in line:
                    sections['–ö–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π'] = True
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π (—Å—Ç—Ä–æ–∫–∞ {i+1})")
                    
                elif '=== –î–ê–ù–ù–´–ï GOOGLE PLACES API (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤) ===' in line:
                    sections['Google Places API'] = True
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ Google Places API (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤) (—Å—Ç—Ä–æ–∫–∞ {i+1})")
                    
                elif '=== –î–ê–ù–ù–´–ï NOMINATIM (OpenStreetMap) (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤) ===' in line:
                    sections['Nominatim'] = True
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ Nominatim (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤) (—Å—Ç—Ä–æ–∫–∞ {i+1})")
                    
                elif '=== –û–ë–©–ò–ô –¢–†–ï–ù–î ===' in line:
                    sections['–û–±—â–∏–π —Ç—Ä–µ–Ω–¥'] = True
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –æ–±—â–∏–π —Ç—Ä–µ–Ω–¥ (—Å—Ç—Ä–æ–∫–∞ {i+1})")
                    
                elif '=== –¢–†–ï–ù–î –ü–û –ö–û–õ–ò–ß–ï–°–¢–í–£ –°–ü–ê–õ–ï–ù ===' in line:
                    sections['–¢—Ä–µ–Ω–¥ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–ø–∞–ª–µ–Ω'] = True
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ç—Ä–µ–Ω–¥ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–ø–∞–ª–µ–Ω (—Å—Ç—Ä–æ–∫–∞ {i+1})")
                    
                elif '=== –¢–†–ï–ù–î –ü–û –í–û–ó–†–ê–°–¢–£ –û–ë–™–ï–ö–¢–ê ===' in line:
                    sections['–¢—Ä–µ–Ω–¥ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –æ–±—ä–µ–∫—Ç–∞'] = True
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ç—Ä–µ–Ω–¥ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –æ–±—ä–µ–∫—Ç–∞ (—Å—Ç—Ä–æ–∫–∞ {i+1})")
                    
                elif '=== –¢–†–ï–ù–î –ü–û –≠–¢–ê–ñ–£ –û–ë–™–ï–ö–¢–ê ===' in line:
                    sections['–¢—Ä–µ–Ω–¥ –ø–æ —ç—Ç–∞–∂—É –æ–±—ä–µ–∫—Ç–∞'] = True
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ç—Ä–µ–Ω–¥ –ø–æ —ç—Ç–∞–∂—É –æ–±—ä–µ–∫—Ç–∞ (—Å—Ç—Ä–æ–∫–∞ {i+1})")
                    
                elif '=== –¢–†–ï–ù–î –ü–û –¢–ò–ü–£ –û–¢–û–ü–õ–ï–ù–ò–Ø ===' in line:
                    sections['–¢—Ä–µ–Ω–¥ –ø–æ —Ç–∏–ø—É –æ—Ç–æ–ø–ª–µ–Ω–∏—è'] = True
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ç—Ä–µ–Ω–¥ –ø–æ —Ç–∏–ø—É –æ—Ç–æ–ø–ª–µ–Ω–∏—è (—Å—Ç—Ä–æ–∫–∞ {i+1})")
                    
                elif '–î–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç–∞:' in line:
                    print(f"‚ùå –ù–ê–ô–î–ï–ù –î–£–ë–õ–ò–†–£–Æ–©–ò–ô–°–Ø –ë–õ–û–ö '–î–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç–∞' (—Å—Ç—Ä–æ–∫–∞ {i+1})")
                    
            print(f"\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
            for section, found in sections.items():
                status = "‚úÖ" if found else "‚ùå"
                print(f"  {status} {section}: {'–ù–∞–π–¥–µ–Ω' if found else '–ù–ï –Ω–∞–π–¥–µ–Ω'}")
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π
            location_lines = [line for line in lines if 'ID:' in line]
            if location_lines:
                print(f"\nüìã –ö–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π:")
                for line in location_lines:
                    print(f"  - {line.strip()}")
            else:
                print(f"\n‚ùå –ö–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.json()}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç—á–µ—Ç–∞")
    print("=" * 50)
    
    test_report_structure()
    
    print("\nüìù –û–∂–∏–¥–∞–µ–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
    print("1. ‚úÖ –£–±—Ä–∞–Ω –¥—É–±–ª–∏—Ä—É—é—â–∏–π—Å—è –±–ª–æ–∫ '–î–∞–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç–∞'")
    print("2. ‚úÖ –ö–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
    print("3. ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ Google Places API –∏ Nominatim")
    print("4. ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç—á–µ—Ç–∞ —Å—Ç–∞–ª–∞ —á–∏—â–µ") 