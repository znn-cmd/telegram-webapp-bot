#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ property_trends
–¥–ª—è district_id 2279
"""

import os
import sys
import json
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    import psycopg2
    from psycopg2.extras import RealDictCursor
except ImportError:
    print("‚ùå –û—à–∏–±–∫–∞: psycopg2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install psycopg2-binary")
    sys.exit(1)

def get_database_connection():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        connection = psycopg2.connect(
            host="localhost",
            database="aaadviser",
            user="postgres",
            password="postgres",
            port="5432"
        )
        return connection
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def test_property_trends_district_2279():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö property_trends –¥–ª—è district_id 2279"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö property_trends –¥–ª—è district_id 2279")
    print("=" * 60)
    
    connection = get_database_connection()
    if not connection:
        return
    
    try:
        cursor = connection.cursor(cursor_factory=RealDictCursor)
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è district_id 2279
        print("\nüìä 1. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        cursor.execute("""
            SELECT 
                COUNT(*) as total_records,
                COUNT(DISTINCT property_year) as unique_years,
                COUNT(DISTINCT property_month) as unique_months,
                MIN(property_year) as min_year,
                MAX(property_year) as max_year,
                MIN(property_month) as min_month,
                MAX(property_month) as max_month
            FROM property_trends 
            WHERE district_id = 2279
        """)
        
        stats = cursor.fetchone()
        if stats:
            print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {stats['total_records']}")
            print(f"   –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ª–µ—Ç: {stats['unique_years']}")
            print(f"   –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –º–µ—Å—è—Ü–µ–≤: {stats['unique_months']}")
            print(f"   –î–∏–∞–ø–∞–∑–æ–Ω –ª–µ—Ç: {stats['min_year']} - {stats['max_year']}")
            print(f"   –î–∏–∞–ø–∞–∑–æ–Ω –º–µ—Å—è—Ü–µ–≤: {stats['min_month']} - {stats['max_month']}")
        else:
            print("   ‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è district_id 2279")
            return
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –≥–æ–¥–∞–º
        print("\nüìÖ 2. –î–∞–Ω–Ω—ã–µ –ø–æ –≥–æ–¥–∞–º:")
        cursor.execute("""
            SELECT 
                property_year,
                COUNT(*) as records_count,
                MIN(property_month) as min_month,
                MAX(property_month) as max_month
            FROM property_trends 
            WHERE district_id = 2279
            GROUP BY property_year
            ORDER BY property_year DESC
        """)
        
        years_data = cursor.fetchall()
        for year_data in years_data:
            print(f"   {year_data['property_year']}: {year_data['records_count']} –∑–∞–ø–∏—Å–µ–π "
                  f"(–º–µ—Å—è—Ü—ã {year_data['min_month']}-{year_data['max_month']})")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –º–µ—Å—è—Ü–∞–º
        print("\nüìÜ 3. –î–∞–Ω–Ω—ã–µ –ø–æ –º–µ—Å—è—Ü–∞–º:")
        cursor.execute("""
            SELECT 
                property_month,
                COUNT(*) as records_count,
                MIN(property_year) as min_year,
                MAX(property_year) as max_year
            FROM property_trends 
            WHERE district_id = 2279
            GROUP BY property_month
            ORDER BY property_month
        """)
        
        months_data = cursor.fetchall()
        month_names = [
            '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
            '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
        ]
        
        for month_data in months_data:
            month_name = month_names[month_data['property_month'] - 1]
            print(f"   {month_data['property_month']:2d} ({month_name:10s}): "
                  f"{month_data['records_count']:2d} –∑–∞–ø–∏—Å–µ–π "
                  f"(–≥–æ–¥—ã {month_data['min_year']}-{month_data['max_year']})")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–µ 10 –∑–∞–ø–∏—Å–µ–π)
        print("\nüìã 4. –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–µ—Ä–≤—ã–µ 10 –∑–∞–ø–∏—Å–µ–π):")
        cursor.execute("""
            SELECT 
                id,
                property_year,
                property_month,
                unit_price_for_sale,
                price_change_sale,
                unit_price_for_rent,
                price_change_rent,
                yield,
                created_at
            FROM property_trends 
            WHERE district_id = 2279
            ORDER BY property_year DESC, property_month DESC
            LIMIT 10
        """)
        
        detailed_data = cursor.fetchall()
        for record in detailed_data:
            month_name = month_names[record['property_month'] - 1]
            print(f"   ID {record['id']:4d} | {month_name:10s} {record['property_year']} | "
                  f"–ü—Ä–æ–¥–∞–∂–∞: {record['unit_price_for_sale']:8.2f} ‚Ç∫/–º¬≤ "
                  f"(+{record['price_change_sale']:5.2f}%) | "
                  f"–ê—Ä–µ–Ω–¥–∞: {record['unit_price_for_rent']:6.2f} ‚Ç∫/–º¬≤ "
                  f"(+{record['price_change_rent']:5.2f}%) | "
                  f"–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {record['yield']:4.1f}%")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤
        print("\nüïí 5. –î–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤:")
        current_date = datetime.now()
        current_year = current_date.year
        current_month = current_date.month
        
        # –í—ã—á–∏—Å–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 12 –º–µ—Å—è—Ü–µ–≤
        months_to_check = []
        for i in range(12):
            month = current_month - i
            year = current_year
            if month <= 0:
                month += 12
                year -= 1
            months_to_check.append((year, month))
        
        for year, month in months_to_check:
            cursor.execute("""
                SELECT 
                    unit_price_for_sale,
                    price_change_sale,
                    unit_price_for_rent,
                    price_change_rent,
                    yield
                FROM property_trends 
                WHERE district_id = 2279 
                AND property_year = %s 
                AND property_month = %s
            """, (year, month))
            
            record = cursor.fetchone()
            month_name = month_names[month - 1]
            
            if record:
                print(f"   {month_name:10s} {year}: "
                      f"–ü—Ä–æ–¥–∞–∂–∞ {record['unit_price_for_sale']:8.2f} ‚Ç∫/–º¬≤ "
                      f"(+{record['price_change_sale']:5.2f}%) | "
                      f"–ê—Ä–µ–Ω–¥–∞ {record['unit_price_for_rent']:6.2f} ‚Ç∫/–º¬≤ "
                      f"(+{record['price_change_rent']:5.2f}%) | "
                      f"–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å {record['yield']:4.1f}%")
            else:
                print(f"   {month_name:10s} {year}: ‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ NULL –∑–Ω–∞—á–µ–Ω–∏–π
        print("\n‚ö†Ô∏è  6. –ü—Ä–æ–≤–µ—Ä–∫–∞ NULL –∑–Ω–∞—á–µ–Ω–∏–π:")
        cursor.execute("""
            SELECT 
                COUNT(*) as total_records,
                COUNT(unit_price_for_sale) as sale_price_count,
                COUNT(price_change_sale) as sale_change_count,
                COUNT(unit_price_for_rent) as rent_price_count,
                COUNT(price_change_rent) as rent_change_count,
                COUNT(yield) as yield_count
            FROM property_trends 
            WHERE district_id = 2279
        """)
        
        null_stats = cursor.fetchone()
        if null_stats:
            print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {null_stats['total_records']}")
            print(f"   –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: {null_stats['sale_price_count']} (NULL: {null_stats['total_records'] - null_stats['sale_price_count']})")
            print(f"   –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏: {null_stats['sale_change_count']} (NULL: {null_stats['total_records'] - null_stats['sale_change_count']})")
            print(f"   –¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã: {null_stats['rent_price_count']} (NULL: {null_stats['total_records'] - null_stats['rent_price_count']})")
            print(f"   –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∞—Ä–µ–Ω–¥—ã: {null_stats['rent_change_count']} (NULL: {null_stats['total_records'] - null_stats['rent_change_count']})")
            print(f"   –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {null_stats['yield_count']} (NULL: {null_stats['total_records'] - null_stats['yield_count']})")
        
        # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        print("\nüèóÔ∏è  7. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã property_trends:")
        cursor.execute("""
            SELECT column_name, data_type, is_nullable, column_default
            FROM information_schema.columns 
            WHERE table_name = 'property_trends'
            ORDER BY ordinal_position
        """)
        
        columns = cursor.fetchall()
        for column in columns:
            nullable = "NULL" if column['is_nullable'] == 'YES' else "NOT NULL"
            default = f" DEFAULT {column['column_default']}" if column['column_default'] else ""
            print(f"   {column['column_name']:25s} | {column['data_type']:15s} | {nullable}{default}")
        
        # 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
        print("\nüîç 8. –ò–Ω–¥–µ–∫—Å—ã —Ç–∞–±–ª–∏—Ü—ã property_trends:")
        cursor.execute("""
            SELECT 
                indexname,
                indexdef
            FROM pg_indexes 
            WHERE tablename = 'property_trends'
            ORDER BY indexname
        """)
        
        indexes = cursor.fetchall()
        if indexes:
            for index in indexes:
                print(f"   {index['indexname']}: {index['indexdef']}")
        else:
            print("   ‚ùå –ò–Ω–¥–µ–∫—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # 9. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
        print("\nüîí 9. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã property_trends:")
        cursor.execute("""
            SELECT 
                conname as constraint_name,
                contype as constraint_type,
                pg_get_constraintdef(oid) as constraint_definition
            FROM pg_constraint 
            WHERE conrelid = 'property_trends'::regclass
            ORDER BY conname
        """)
        
        constraints = cursor.fetchall()
        if constraints:
            for constraint in constraints:
                print(f"   {constraint['constraint_name']} ({constraint['constraint_type']}): {constraint['constraint_definition']}")
        else:
            print("   ‚ùå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # 10. –¢–µ—Å—Ç–æ–≤–∞—è –≤—ã–±–æ—Ä–∫–∞ –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        print("\nüåê 10. –¢–µ—Å—Ç–æ–≤–∞—è –≤—ã–±–æ—Ä–∫–∞ –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
        cursor.execute("""
            SELECT 
                property_year,
                property_month,
                unit_price_for_sale,
                price_change_sale,
                unit_price_for_rent,
                price_change_rent,
                yield
            FROM property_trends 
            WHERE district_id = 2279
            ORDER BY property_year DESC, property_month DESC
            LIMIT 20
        """)
        
        test_data = cursor.fetchall()
        print(f"   –ü–æ–ª—É—á–µ–Ω–æ {len(test_data)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–∞–π–ª
        test_data_json = []
        for record in test_data:
            test_data_json.append({
                'property_year': record['property_year'],
                'property_month': record['property_month'],
                'unit_price_for_sale': float(record['unit_price_for_sale']) if record['unit_price_for_sale'] else None,
                'price_change_sale': float(record['price_change_sale']) if record['price_change_sale'] else None,
                'unit_price_for_rent': float(record['unit_price_for_rent']) if record['unit_price_for_rent'] else None,
                'price_change_rent': float(record['price_change_rent']) if record['price_change_rent'] else None,
                'yield': float(record['yield']) if record['yield'] else None
            })
        
        with open('test_property_trends_district_2279_data.json', 'w', encoding='utf-8') as f:
            json.dump(test_data_json, f, ensure_ascii=False, indent=2)
        
        print(f"   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: test_property_trends_district_2279_data.json")
        
        # 11. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print("\nüí° 11. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        if stats['total_records'] == 0:
            print("   ‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è district_id 2279")
            print("   üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
            print("      - –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ district_id 2279 –≤ —Ç–∞–±–ª–∏—Ü–µ districts")
            print("      - –ï—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ property_trends –¥–ª—è –¥—Ä—É–≥–∏—Ö district_id")
            print("      - –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ")
        elif stats['total_records'] < 12:
            print("   ‚ö†Ô∏è –ú–∞–ª–æ –¥–∞–Ω–Ω—ã—Ö (–º–µ–Ω–µ–µ 12 –∑–∞–ø–∏—Å–µ–π)")
            print("   üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("      - –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ")
            print("      - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –¥–∞–Ω–Ω—ã—Ö")
            print("      - –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö")
        else:
            print("   ‚úÖ –î–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            print("   üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:")
            print("      - –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è")
            print("      - –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ª–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤—Å–µ –∑–∞–ø–∏—Å–∏")
            print("      - –ù–µ—Ç –ª–∏ –æ—à–∏–±–æ–∫ –≤ JavaScript –∫–æ–¥–µ")
        
        print("\n" + "=" * 60)
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        if connection:
            connection.close()
            print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ")

if __name__ == "__main__":
    test_property_trends_district_2279()
