#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –≥–æ—Ä–æ–¥–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ locations
"""

import os
import sys
from supabase import create_client, Client

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase
url = os.environ.get('SUPABASE_URL')
key = os.environ.get('SUPABASE_KEY')

if not url or not key:
    print('‚ùå SUPABASE_URL –∏–ª–∏ SUPABASE_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
    sys.exit(1)

supabase: Client = create_client(url, key)

def analyze_locations_data():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã locations"""
    print("üîç –ê–ù–ê–õ–ò–ó –¢–ê–ë–õ–ò–¶–´ LOCATIONS")
    print("=" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
        result = supabase.table('locations').select('*').execute()
        total_records = len(result.data) if result.data else 0
        print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {total_records}")
        
        if not result.data:
            print("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
        print("\nüèôÔ∏è –ê–ù–ê–õ–ò–ó –£–ù–ò–ö–ê–õ–¨–ù–´–• –ì–û–†–û–î–û–í:")
        print("-" * 40)
        
        cities_data = {}
        cities_with_null = []
        
        for record in result.data:
            city_id = record.get('city_id')
            city_name = record.get('city_name')
            country_id = record.get('country_id')
            
            if city_id is not None:
                if city_name is None:
                    cities_with_null.append({
                        'city_id': city_id,
                        'country_id': country_id,
                        'record_id': record.get('id')
                    })
                else:
                    if city_id not in cities_data:
                        cities_data[city_id] = {
                            'name': city_name,
                            'country_id': country_id,
                            'count': 0
                        }
                    cities_data[city_id]['count'] += 1
        
        print(f"üìä –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö city_id: {len(cities_data)}")
        print(f"‚ö†Ô∏è –ó–∞–ø–∏—Å–µ–π —Å city_name = null: {len(cities_with_null)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–æ—Ä–æ–¥–∞ —Å null –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        if cities_with_null:
            print(f"\n‚ùå –ì–û–†–û–î–ê –° NULL –ó–ù–ê–ß–ï–ù–ò–Ø–ú–ò (–ø–µ—Ä–≤—ã–µ 10):")
            print("-" * 50)
            for i, city in enumerate(cities_with_null[:10]):
                print(f"  {i+1}. city_id: {city['city_id']}, country_id: {city['country_id']}, record_id: {city['record_id']}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
        print(f"\n‚úÖ –£–ù–ò–ö–ê–õ–¨–ù–´–ï –ì–û–†–û–î–ê (–ø–µ—Ä–≤—ã–µ 15):")
        print("-" * 40)
        sorted_cities = sorted(cities_data.items(), key=lambda x: x[1]['name'])
        for i, (city_id, city_info) in enumerate(sorted_cities[:15]):
            print(f"  {i+1}. city_id: {city_id}, name: '{city_info['name']}', count: {city_info['count']}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ country_id = 1 (T√ºrkiye)
        print(f"\nüáπüá∑ –ê–ù–ê–õ–ò–ó –î–õ–Ø T√úRKIYE (country_id = 1):")
        print("-" * 40)
        
        turkey_cities = {}
        turkey_null_cities = []
        
        for record in result.data:
            if record.get('country_id') == 1:
                city_id = record.get('city_id')
                city_name = record.get('city_name')
                
                if city_id is not None:
                    if city_name is None:
                        turkey_null_cities.append({
                            'city_id': city_id,
                            'record_id': record.get('id')
                        })
                    else:
                        if city_id not in turkey_cities:
                            turkey_cities[city_id] = {
                                'name': city_name,
                                'count': 0
                            }
                        turkey_cities[city_id]['count'] += 1
        
        print(f"üìä –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –≤ –¢—É—Ä—Ü–∏–∏: {len(turkey_cities)}")
        print(f"‚ö†Ô∏è –ó–∞–ø–∏—Å–µ–π —Å city_name = null –≤ –¢—É—Ä—Ü–∏–∏: {len(turkey_null_cities)}")
        
        if turkey_null_cities:
            print(f"\n‚ùå –ì–û–†–û–î–ê –¢–£–†–¶–ò–ò –° NULL –ó–ù–ê–ß–ï–ù–ò–Ø–ú–ò:")
            print("-" * 40)
            for i, city in enumerate(turkey_null_cities):
                print(f"  {i+1}. city_id: {city['city_id']}, record_id: {city['record_id']}")
        
        print(f"\n‚úÖ –ì–û–†–û–î–ê –¢–£–†–¶–ò–ò:")
        print("-" * 30)
        sorted_turkey_cities = sorted(turkey_cities.items(), key=lambda x: x[1]['name'])
        for i, (city_id, city_info) in enumerate(sorted_turkey_cities):
            print(f"  {i+1}. city_id: {city_id}, name: '{city_info['name']}', count: {city_info['count']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫–∞–∫ –≤ API
        print(f"\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ó–ê–ü–†–û–°–ê:")
        print("-" * 40)
        
        api_result = supabase.table('locations').select('city_id, city_name').eq('country_id', 1).execute()
        api_records = len(api_result.data) if api_result.data else 0
        print(f"üìä API –∑–∞–ø—Ä–æ—Å –≤–µ—Ä–Ω—É–ª –∑–∞–ø–∏—Å–µ–π: {api_records}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∫–∞–∫ –≤ –∫–æ–¥–µ
        filtered_cities = []
        seen = set()
        null_count = 0
        
        for item in api_result.data:
            if item['city_id'] is not None and item['city_name'] is not None:
                city_tuple = (item['city_id'], item['city_name'])
                if city_tuple not in seen:
                    filtered_cities.append(city_tuple)
                    seen.add(city_tuple)
            else:
                null_count += 1
        
        print(f"‚úÖ –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ–¥–æ–≤: {len(filtered_cities)}")
        print(f"‚ö†Ô∏è –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π —Å null: {null_count}")
        
        print(f"\nüìã –û–¢–§–ò–õ–¨–¢–†–û–í–ê–ù–ù–´–ï –ì–û–†–û–î–ê:")
        print("-" * 30)
        for i, (city_id, city_name) in enumerate(filtered_cities):
            print(f"  {i+1}. city_id: {city_id}, name: '{city_name}'")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")

if __name__ == "__main__":
    analyze_locations_data()
