#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ "–ú–æ–∏ –æ—Ç—á–µ—Ç—ã"
"""

import requests
import json

# URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
BASE_URL = "http://localhost:5000"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL

def test_user_reports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_telegram_id = 123456789  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π telegram_id
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /api/user_reports")
    print(f"üì± Telegram ID: {test_telegram_id}")
    
    try:
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤
        response = requests.post(
            f"{BASE_URL}/api/user_reports",
            json={"telegram_id": test_telegram_id},
            headers={"Content-Type": "application/json"}
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            reports = data.get('reports', [])
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤: {len(reports)}")
            
            for i, report in enumerate(reports, 1):
                print(f"  üìã –û—Ç—á–µ—Ç {i}:")
                print(f"    ID: {report.get('id')}")
                print(f"    –ù–∞–∑–≤–∞–Ω–∏–µ: {report.get('title')}")
                print(f"    –¢–∏–ø: {report.get('report_type')}")
                print(f"    –ê–¥—Ä–µ—Å: {report.get('address')}")
                print(f"    –¶–µ–Ω–∞: {report.get('price')}")
                print(f"    –°–æ–∑–¥–∞–Ω: {report.get('created_at')}")
                print(f"    URL: {report.get('report_url')}")
                print()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_delete_report():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞"""
    
    test_telegram_id = 123456789  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π telegram_id
    test_report_id = 1  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –æ—Ç—á–µ—Ç–∞
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /api/delete_report")
    print(f"üì± Telegram ID: {test_telegram_id}")
    print(f"üóëÔ∏è Report ID: {test_report_id}")
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/delete_report",
            json={
                "telegram_id": test_telegram_id,
                "report_id": test_report_id
            },
            headers={"Content-Type": "application/json"}
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

def test_user_language():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    test_telegram_id = 123456789  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π telegram_id
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /api/user")
    print(f"üì± Telegram ID: {test_telegram_id}")
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/user",
            json={
                "telegram_id": test_telegram_id,
                "username": "test_user",
                "tg_name": "Test User",
                "last_name": "Test",
                "language_code": "ru"
            },
            headers={"Content-Type": "application/json"}
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            language = data.get('language', 'ru')
            print(f"‚úÖ –Ø–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {language}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ '–ú–æ–∏ –æ—Ç—á–µ—Ç—ã'")
    print("=" * 50)
    
    test_user_language()
    test_user_reports()
    test_delete_report()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
