#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from currency_functions import supabase
import requests
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

def check_currency_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–∞–ª—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤–∞–ª—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤–∞–ª—é—Ç
        result = supabase.table('currency').select('*').order('created_at', desc=True).limit(5).execute()
        
        if result.data:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(result.data)} –∑–∞–ø–∏—Å–µ–π –≤–∞–ª—é—Ç:")
            for i, record in enumerate(result.data, 1):
                print(f"\nüìä –ó–∞–ø–∏—Å—å {i}:")
                print(f"   ID: {record.get('id')}")
                print(f"   –î–∞—Ç–∞: {record.get('created_at')}")
                print(f"   EUR (–±–∞–∑–æ–≤–∞—è): {record.get('euro')}")
                print(f"   TRY: {record.get('try')} (1 EUR = {record.get('try')} TRY)")
                print(f"   USD: {record.get('usd')} (1 EUR = {record.get('usd')} USD)")
                print(f"   RUB: {record.get('rub')} (1 EUR = {record.get('rub')} RUB)")
                print(f"   AED: {record.get('aed')} (1 EUR = {record.get('aed')} AED)")
                print(f"   THB: {record.get('thb')} (1 EUR = {record.get('thb')} THB)")
        else:
            print("‚ùå –ó–∞–ø–∏—Å–∏ –≤–∞–ª—é—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

def test_currency_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API currencylayer.com"""
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API currencylayer.com")
    print("=" * 50)
    
    # API –∫–ª—é—á
    CURRENCYLAYER_API_KEY = "c61dddb55d93e77ce5a2c8b91fb22694"
    
    try:
        # –ó–∞–ø—Ä–æ—Å –∫ API
        url = "http://api.currencylayer.com/historical"
        params = {
            'access_key': CURRENCYLAYER_API_KEY,
            'date': '2025-08-07',
            'base': 'EUR',
            'currencies': 'RUB,USD,TRY,AED,THB'
        }
        
        print(f"üì° –ó–∞–ø—Ä–æ—Å –∫ API: {url}")
        print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
        
        response = requests.get(url, params=params)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API")
            print(f"üìã –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞: {data}")
            
            if data.get('success'):
                quotes = data.get('quotes', {})
                print(f"\nüí± –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã:")
                for quote, rate in quotes.items():
                    print(f"   {quote}: {rate}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('error', {})}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            print(f"üìã –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")

if __name__ == "__main__":
    check_currency_data()
    test_currency_api()

