#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
"""

import requests
import json
from locales import locales

def test_localization():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª—é—á–∏ –µ—Å—Ç—å –≤ locales.py
    required_keys = [
        'main.slogan',
        'main.balance', 
        'main.title',
        'main.region_analytics',
        'main.object_evaluation',
        'main.my_reports',
        'main.profile',
        'main.help',
        'admin.title',
        'admin.user_management',
        'common.loading',
        'common.language',
        'common.confirm',
        'reports.region_analytics',
        'reports.property_evaluation',
        'reports.my_reports',
        'profile.title',
        'help.title'
    ]
    
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏:")
    
    for lang in ['ru', 'en', 'de', 'fr', 'tr']:
        print(f"\nüåê –Ø–∑—ã–∫: {lang}")
        missing_keys = []
        
        for key in required_keys:
            keys = key.split('.')
            current = locales[lang]
            
            try:
                for k in keys:
                    current = current[k]
                print(f"  ‚úÖ {key}: {current}")
            except KeyError:
                missing_keys.append(key)
                print(f"  ‚ùå {key}: –û–¢–°–£–¢–°–¢–í–£–ï–¢")
        
        if missing_keys:
            print(f"  ‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–ª—é—á–∏: {missing_keys}")
        else:
            print(f"  ‚úÖ –í—Å–µ –∫–ª—é—á–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints:")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
    try:
        response = requests.post('http://localhost:5000/api/translations', 
                               json={'language': 'ru'}, 
                               timeout=5)
        if response.status_code == 200:
            data = response.json()
            print("  ‚úÖ /api/translations —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"  üìä –ü–æ–ª—É—á–µ–Ω–æ {len(data)} –∫–ª—é—á–µ–π –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞")
        else:
            print(f"  ‚ùå /api/translations –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ /api/translations: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        response = requests.post('http://localhost:5000/api/get_user_language', 
                               json={'telegram_id': 123456789, 'telegram_language': 'ru'}, 
                               timeout=5)
        if response.status_code == 200:
            data = response.json()
            print("  ‚úÖ /api/get_user_language —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"  üìä –û—Ç–≤–µ—Ç: {data}")
        else:
            print(f"  ‚ùå /api/get_user_language –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ /api/get_user_language: {e}")
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
    
    try:
        response = requests.get('http://localhost:5000/webapp_main', timeout=5)
        if response.status_code == 200:
            print("  ‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ HTML –µ—Å—Ç—å data-i18n –∞—Ç—Ä–∏–±—É—Ç—ã
            content = response.text
            i18n_attributes = content.count('data-i18n=')
            print(f"  üìä –ù–∞–π–¥–µ–Ω–æ {i18n_attributes} –∞—Ç—Ä–∏–±—É—Ç–æ–≤ data-i18n")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–¥–∫–ª—é—á–µ–Ω i18n-manager.js
            if 'i18n-manager.js' in content:
                print("  ‚úÖ i18n-manager.js –ø–æ–¥–∫–ª—é—á–µ–Ω")
            else:
                print("  ‚ùå i18n-manager.js –ù–ï –ø–æ–¥–∫–ª—é—á–µ–Ω")
                
        else:
            print(f"  ‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–µ—Ä–Ω—É–ª–∞ —Å—Ç–∞—Ç—É—Å {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {e}")
    
    print("\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_localization()
