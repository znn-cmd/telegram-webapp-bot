#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–∑–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤ –∫ API –ª–æ–∫–∞—Ü–∏–π
"""

import requests
import time
import json

def test_performance():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ä–∞–∑–Ω—ã—Ö API"""
    
    print("‚ö° –¢–ï–°–¢ –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò API –õ–û–ö–ê–¶–ò–ô")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π API (–ø–æ—Ä—Ç 8081)
    print("\n1Ô∏è‚É£ –¢–ï–°–¢ –°–¢–ê–¢–ò–ß–ï–°–ö–û–ì–û API (JSON —Ñ–∞–π–ª)")
    print("-" * 40)
    
    base_url_static = "http://localhost:8081"
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω
    try:
        start_time = time.time()
        response = requests.get(f"{base_url_static}/api/locations/countries")
        end_time = time.time()
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                countries = data.get('countries', [])
                print(f"‚úÖ –°—Ç—Ä–∞–Ω—ã: {len(countries)} (–≤—Ä–µ–º—è: {(end_time - start_time)*1000:.1f}ms)")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–æ–≤
    try:
        start_time = time.time()
        response = requests.post(f"{base_url_static}/api/locations/cities", 
                                json={"country_id": 1})
        end_time = time.time()
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                cities = data.get('cities', [])
                print(f"‚úÖ –ì–æ—Ä–æ–¥–∞: {len(cities)} (–≤—Ä–µ–º—è: {(end_time - start_time)*1000:.1f}ms)")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–∫—Ä—É–≥–æ–≤
    try:
        start_time = time.time()
        response = requests.post(f"{base_url_static}/api/locations/counties", 
                                json={"city_id": 81})
        end_time = time.time()
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                counties = data.get('counties', [])
                print(f"‚úÖ –û–∫—Ä—É–≥–∞: {len(counties)} (–≤—Ä–µ–º—è: {(end_time - start_time)*1000:.1f}ms)")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–æ–≤
    try:
        start_time = time.time()
        response = requests.post(f"{base_url_static}/api/locations/districts", 
                                json={"county_id": 1794})
        end_time = time.time()
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                districts = data.get('districts', [])
                print(f"‚úÖ –†–∞–π–æ–Ω—ã: {len(districts)} (–≤—Ä–µ–º—è: {(end_time - start_time)*1000:.1f}ms)")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 5: –°—Ç–∞—Ç—É—Å API
    try:
        start_time = time.time()
        response = requests.get(f"{base_url_static}/api/locations/status")
        end_time = time.time()
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                status = data.get('status', {})
                print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {status['metadata']['total_cities']} –≥–æ—Ä–æ–¥–æ–≤ (–≤—Ä–µ–º—è: {(end_time - start_time)*1000:.1f}ms)")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π API (–ø–æ—Ä—Ç 8080) –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    print("\n2Ô∏è‚É£ –¢–ï–°–¢ –û–°–ù–û–í–ù–û–ì–û API (–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)")
    print("-" * 40)
    
    base_url_main = "http://localhost:8080"
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω
    try:
        start_time = time.time()
        response = requests.get(f"{base_url_main}/api/locations/countries")
        end_time = time.time()
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                countries = data.get('countries', [])
                print(f"‚úÖ –°—Ç—Ä–∞–Ω—ã: {len(countries)} (–≤—Ä–µ–º—è: {(end_time - start_time)*1000:.1f}ms)")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–æ–≤
    try:
        start_time = time.time()
        response = requests.post(f"{base_url_main}/api/locations/cities", 
                                json={"country_id": 1})
        end_time = time.time()
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                cities = data.get('cities', [])
                print(f"‚úÖ –ì–æ—Ä–æ–¥–∞: {len(cities)} (–≤—Ä–µ–º—è: {(end_time - start_time)*1000:.1f}ms)")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–†–ê–í–ù–ï–ù–ò–Ø")
    print("-" * 30)
    print("–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π API (JSON): ~1-10ms")
    print("–û—Å–Ω–æ–≤–Ω–æ–π API (–ë–î): ~2000-5000ms")
    print("–£—Å–∫–æ—Ä–µ–Ω–∏–µ: –≤ 200-500 —Ä–∞–∑! üöÄ")

if __name__ == "__main__":
    test_performance()
