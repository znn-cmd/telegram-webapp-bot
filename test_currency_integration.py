#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞–ª—é—Ç–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from currency_functions import (
    get_currency_rate_for_date,
    fetch_and_save_currency_rates,
    convert_turkish_data_to_eur,
    is_turkish_location
)
from datetime import datetime
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_currency_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –≤–∞–ª—é—Ç–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –≤–∞–ª—é—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤...")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –¥–ª—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç—ã
    print("\n1. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã –¥–ª—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç—ã:")
    try:
        currency_rate = get_currency_rate_for_date()
        if currency_rate:
            print(f"‚úÖ –ö—É—Ä—Å –≤–∞–ª—é—Ç—ã –ø–æ–ª—É—á–µ–Ω: {currency_rate}")
            print(f"   TRY/EUR: {currency_rate.get('try', '–Ω/–¥')}")
            print(f"   USD/EUR: {currency_rate.get('usd', '–Ω/–¥')}")
            print(f"   RUB/EUR: {currency_rate.get('rub', '–Ω/–¥')}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç—ã: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—É—Ä–µ—Ü–∫–æ–π –ª–æ–∫–∞—Ü–∏–∏
    print("\n2. –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç—É—Ä–µ—Ü–∫–æ–π –ª–æ–∫–∞—Ü–∏–∏:")
    
    # –¢—É—Ä–µ—Ü–∫–∞—è –ª–æ–∫–∞—Ü–∏—è
    turkish_components = {
        'country': 'Turkey',
        'country_code': 'TR',
        'city': 'Istanbul',
        'district': 'Kadikoy'
    }
    
    is_turkish = is_turkish_location(turkish_components)
    print(f"–¢—É—Ä–µ—Ü–∫–∞—è –ª–æ–∫–∞—Ü–∏—è: {is_turkish}")
    
    # –ù–µ—Ç—É—Ä–µ—Ü–∫–∞—è –ª–æ–∫–∞—Ü–∏—è
    non_turkish_components = {
        'country': 'Germany',
        'country_code': 'DE',
        'city': 'Berlin',
        'district': 'Mitte'
    }
    
    is_turkish = is_turkish_location(non_turkish_components)
    print(f"–ù–µ—Ç—É—Ä–µ—Ü–∫–∞—è –ª–æ–∫–∞—Ü–∏—è: {is_turkish}")
    
    # –¢–µ—Å—Ç 3: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç—É—Ä–µ—Ü–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –µ–≤—Ä–æ
    print("\n3. –¢–µ—Å—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ç—É—Ä–µ—Ü–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –µ–≤—Ä–æ:")
    
    # –ü—Ä–∏–º–µ—Ä —Ç—É—Ä–µ—Ü–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    turkish_market_data = {
        'general_data': {
            'unit_price_for_sale': 50000,  # TRY –∑–∞ –º¬≤
            'unit_price_for_rent': 2500,   # TRY –∑–∞ –º¬≤
            'price_for_sale': 1000000,     # TRY
            'price_for_rent': 50000        # TRY
        },
        'house_type_data': [
            {
                'listing_type': '2+1',
                'unit_price_for_sale': 45000,
                'unit_price_for_rent': 2200
            }
        ]
    }
    
    # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
    currency_rate = get_currency_rate_for_date()
    if currency_rate and currency_rate.get('try'):
        converted_data = convert_turkish_data_to_eur(turkish_market_data, currency_rate)
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ EUR:")
        print(f"   –ö—É—Ä—Å TRY/EUR: {currency_rate['try']}")
        print(f"   –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ –∑–∞ –º¬≤: {converted_data['general_data']['unit_price_for_sale']:.2f} EUR")
        print(f"   –¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã –∑–∞ –º¬≤: {converted_data['general_data']['unit_price_for_rent']:.2f} EUR")
        print(f"   –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: {converted_data['general_data']['price_for_sale']:.2f} EUR")
        print(f"   –¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã: {converted_data['general_data']['price_for_rent']:.2f} EUR")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ API currencylayer.com
    print("\n4. –¢–µ—Å—Ç API currencylayer.com:")
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –Ω–∞–ø—Ä—è–º—É—é —Å API
        currency_data = fetch_and_save_currency_rates()
        if currency_data:
            print(f"‚úÖ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –ø–æ–ª—É—á–µ–Ω—ã —Å API:")
            print(f"   TRY/EUR: {currency_data.get('try', '–Ω/–¥')}")
            print(f"   USD/EUR: {currency_data.get('usd', '–Ω/–¥')}")
            print(f"   RUB/EUR: {currency_data.get('rub', '–Ω/–¥')}")
            print(f"   AED/EUR: {currency_data.get('aed', '–Ω/–¥')}")
            print(f"   THB/EUR: {currency_data.get('thb', '–Ω/–¥')}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç —Å API")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç —Å API: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_currency_functions()
