#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–¥–æ–≤ –ª–æ–∫–∞—Ü–∏–π
"""

import os
import sys
from dotenv import load_dotenv
from supabase import create_client, Client

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase
supabase_url = os.getenv("SUPABASE_URL")
supabase_key = os.getenv("SUPABASE_ANON_KEY")

if not supabase_url or not supabase_key:
    print("‚ùå SUPABASE_URL –∏ SUPABASE_ANON_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    sys.exit(1)

supabase: Client = create_client(supabase_url, supabase_key)

def extract_location_from_address(address):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –≥–æ—Ä–æ–¥, —Ä–∞–π–æ–Ω –∏ –æ–∫—Ä—É–≥ –∏–∑ –∞–¥—Ä–µ—Å–∞
    """
    try:
        address_parts = address.split(',')
        
        location_data = {
            'city_name': None,
            'district_name': None,
            'county_name': None,
            'country_name': 'Turkey'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —Ç—É—Ä–µ—Ü–∫–∏—Ö –∞–¥—Ä–µ—Å–æ–≤
        }
        
        if len(address_parts) >= 3:
            location_data['city_name'] = address_parts[0].strip()
            location_data['county_name'] = address_parts[1].strip()
            
            district_name = address_parts[2].strip()
            district_name = district_name.replace(' Mah.', '').replace(' Mahallesi', '').replace(' Sok.', '').replace(' Sk.', '')
            location_data['district_name'] = district_name
                
        elif len(address_parts) >= 2:
            location_data['district_name'] = address_parts[0].strip()
            location_data['city_name'] = address_parts[1].strip()
        
        if not location_data['city_name']:
            location_data['city_name'] = 'Alanya'
        if not location_data['district_name']:
            location_data['district_name'] = 'Avsallar'
        if not location_data['county_name']:
            location_data['county_name'] = 'Antalya'
        
        return location_data
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ –∞–¥—Ä–µ—Å–∞: {e}")
        return {
            'city_name': 'Alanya',
            'district_name': 'Avsallar', 
            'county_name': 'Antalya',
            'country_name': 'Turkey'
        }

def get_location_codes(city_name, district_name, county_name):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã locations –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º
    """
    try:
        location_codes = {
            'city_code': None,
            'district_code': None,
            'county_code': None,
            'country_code': None
        }
        
        # –ò—â–µ–º –∑–∞–ø–∏—Å—å —Å —Ç–æ—á–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        query = supabase.table('locations').select('*')
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –≤—Å–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
        if city_name:
            query = query.eq('city_name', city_name)
        if district_name:
            query = query.eq('district_name', district_name)
        if county_name:
            query = query.eq('county_name', county_name)
            
        result = query.execute()
        
        if result.data:
            # –ù–∞–π–¥–µ–Ω–∞ —Ç–æ—á–Ω–∞—è –∑–∞–ø–∏—Å—å
            record = result.data[0]
            location_codes['city_code'] = record.get('city_id')
            location_codes['district_code'] = record.get('district_id')
            location_codes['county_code'] = record.get('county_id')
            location_codes['country_code'] = record.get('country_id')
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã –∫–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π: {location_codes}")
            return location_codes
        else:
            # –ò—â–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
            print(f"‚ö†Ô∏è  –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—â–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è")
            
            # –ü–æ–∏—Å–∫ –ø–æ —Ä–∞–π–æ–Ω—É
            if district_name:
                district_result = supabase.table('locations').select('*').eq('district_name', district_name).execute()
                if district_result.data:
                    location_codes['district_code'] = district_result.data[0].get('district_id')
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∫–æ–¥ —Ä–∞–π–æ–Ω–∞: {location_codes['district_code']}")
            
            # –ü–æ–∏—Å–∫ –ø–æ –æ–∫—Ä—É–≥—É
            if county_name:
                county_result = supabase.table('locations').select('*').eq('county_name', county_name).execute()
                if county_result.data:
                    location_codes['county_code'] = county_result.data[0].get('county_id')
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∫–æ–¥ –æ–∫—Ä—É–≥–∞: {location_codes['county_code']}")
            
            # –ü–æ–∏—Å–∫ –ø–æ –≥–æ—Ä–æ–¥—É
            if city_name:
                city_result = supabase.table('locations').select('*').eq('city_name', city_name).execute()
                if city_result.data:
                    location_codes['city_code'] = city_result.data[0].get('city_id')
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∫–æ–¥ –≥–æ—Ä–æ–¥–∞: {location_codes['city_code']}")
        
        return location_codes
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–æ–≤ –ª–æ–∫–∞—Ü–∏–π: {e}")
        return None

def test_location_codes():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–æ–≤ –ª–æ–∫–∞—Ü–∏–π
    """
    print("üöÄ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –ö–û–î–û–í –õ–û–ö–ê–¶–ò–ô")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å
    test_address = "Antalya, Alanya, Avsallar Mah., Cengiz Akay Sok., 12B"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ª–æ–∫–∞—Ü–∏—é –∏–∑ –∞–¥—Ä–µ—Å–∞
    location_info = extract_location_from_address(test_address)
    print(f"üìç –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏: {location_info}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π
    location_codes = get_location_codes(
        location_info.get('city_name', ''),
        location_info.get('district_name', ''),
        location_info.get('county_name', '')
    )
    print(f"üî¢ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–¥—ã: {location_codes}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞ —Ä—ã–Ω–∫–∞
    test_market_analysis = {
        'market_analysis': {
            'radius_5km': {
                'short_term_rentals': {
                    'count': 5,
                    'avg_price_per_night': 155.0,
                    'price_range': [145, 160]
                },
                'long_term_rentals': {
                    'count': 3,
                    'avg_monthly_rent': 5600.0,
                    'price_range': [5200, 6000]
                },
                'sales': {
                    'count': 8,
                    'avg_sale_price': 1122211.0,
                    'price_range': [1000000, 1250000]
                },
                'avg_price_per_sqm': 15451.29
            }
        },
        'location_codes': location_codes,
        'location_info': location_info
    }
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
    report_text = format_market_report_with_codes(test_market_analysis, test_address)
    
    print(f"\nüìã –°–§–û–†–ú–ò–†–û–í–ê–ù–ù–´–ô –û–¢–ß–ï–¢:")
    print("=" * 50)
    print(report_text)
    print("=" * 50)
    
    print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print(f"üí° –ö–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –æ—Ç—á–µ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–∏ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏")

def format_market_report_with_codes(market_analysis, address, language='en'):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥ —Å –∫–æ–¥–∞–º–∏ –ª–æ–∫–∞—Ü–∏–π
    """
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞–Ω–∞–ª–∏–∑–∞
    short_term = market_analysis['market_analysis']['radius_5km']['short_term_rentals']
    long_term = market_analysis['market_analysis']['radius_5km']['long_term_rentals']
    sales = market_analysis['market_analysis']['radius_5km']['sales']
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—ã
    def format_price(price):
        return f"‚Ç¨{price:.2f}".replace('.00', '').replace('.', ',')
    
    def format_price_range(min_price, max_price):
        return f"‚Ç¨{min_price:.0f} - ‚Ç¨{max_price:.0f}"
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç
    report_lines = [
        f"–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –≤ —Ä–∞–¥–∏—É—Å–µ 5 –∫–º:",
        "",
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–∏ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏
    location_codes = market_analysis.get('location_codes')
    location_info = market_analysis.get('location_info')
    if location_codes and location_info:
        report_lines.extend([
            "=== –ö–û–î–´ –õ–û–ö–ê–¶–ò–ô (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤—è–∑–∏ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏) ===",
            f"–°—Ç—Ä–∞–Ω–∞: {location_info.get('country_name', '–Ω/–¥')} (–∫–æ–¥: {location_codes.get('country_code', '–Ω/–¥')})",
            f"–ì–æ—Ä–æ–¥: {location_info.get('city_name', '–Ω/–¥')} (–∫–æ–¥: {location_codes.get('city_code', '–Ω/–¥')})",
            f"–†–∞–π–æ–Ω: {location_info.get('district_name', '–Ω/–¥')} (–∫–æ–¥: {location_codes.get('district_code', '–Ω/–¥')})",
            f"–û–∫—Ä—É–≥: {location_info.get('county_name', '–Ω/–¥')} (–∫–æ–¥: {location_codes.get('county_code', '–Ω/–¥')})",
            "",
        ])
    
    report_lines.extend([
        f"–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è –∞—Ä–µ–Ω–¥–∞ ({short_term['count']} –æ–±—ä–µ–∫—Ç–æ–≤)",
        f"–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ –Ω–æ—á—å: {format_price(short_term['avg_price_per_night'])}",
        "",
        f"–î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω: {format_price_range(short_term['price_range'][0], short_term['price_range'][1])}",
        "",
        f"–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –∞—Ä–µ–Ω–¥–∞ ({long_term['count']} –æ–±—ä–µ–∫—Ç–æ–≤)",
        f"–°—Ä–µ–¥–Ω—è—è –º–µ—Å—è—á–Ω–∞—è –∞—Ä–µ–Ω–¥–∞: {format_price(long_term['avg_monthly_rent'])}",
        "",
        f"–î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω: {format_price_range(long_term['price_range'][0], long_term['price_range'][1])}",
        "",
        f"–ü—Ä–æ–¥–∞–∂–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ ({sales['count']} –æ–±—ä–µ–∫—Ç–æ–≤)",
        f"–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: {format_price(sales['avg_sale_price'])}",
        "",
        f"–î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω: {format_price_range(sales['price_range'][0], sales['price_range'][1])}",
        "",
    ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    report_lines.extend([
        f"–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ –∫–≤.–º: ‚Ç¨{market_analysis['market_analysis']['radius_5km']['avg_price_per_sqm']:.2f}"
    ])
    
    return "\n".join(report_lines)

if __name__ == "__main__":
    test_location_codes() 