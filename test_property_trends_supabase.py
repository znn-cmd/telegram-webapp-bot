#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Supabase API
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ property_trends
"""

import requests
import json
from datetime import datetime
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_property_trends_supabase():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Supabase API –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã property_trends"""
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    supabase_url = os.getenv('SUPABASE_URL')
    supabase_key = os.getenv('SUPABASE_ANON_KEY')
    
    if not supabase_url or not supabase_key:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è SUPABASE_URL –∏–ª–∏ SUPABASE_ANON_KEY")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Supabase")
        return
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ª–æ–∫–∞—Ü–∏–∏
    country_id = 1
    city_id = 7
    county_id = 2038
    district_id = 2339
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Supabase API –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã property_trends")
    print(f"üìç –õ–æ–∫–∞—Ü–∏—è: country_id={country_id}, city_id={city_id}, county_id={county_id}, district_id={district_id}")
    print(f"üåê Supabase URL: {supabase_url}")
    print("=" * 80)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ
    print("üìä 1. –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ property_trends:")
    
    try:
        response = requests.get(
            f"{supabase_url}/rest/v1/property_trends?select=count",
            headers={
                'apikey': supabase_key,
                'Authorization': f'Bearer {supabase_key}',
                'Content-Type': 'application/json'
            },
            timeout=30
        )
        
        if response.status_code == 200:
            data = response.json()
            print(f"   –û—Ç–≤–µ—Ç: {data}")
        else:
            print(f"   –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏
    print(f"\nüìä 2. –ó–∞–ø–∏—Å–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏:")
    
    try:
        # –ó–∞–ø—Ä–æ—Å —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –ª–æ–∫–∞—Ü–∏–∏
        query_params = {
            'select': '*',
            'country_id': f'eq.{country_id}',
            'city_id': f'eq.{city_id}',
            'county_id': f'eq.{county_id}',
            'district_id': f'eq.{district_id}',
            'order': 'property_date.desc'
        }
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        query_string = '&'.join([f"{k}={v}" for k, v in query_params.items()])
        url = f"{supabase_url}/rest/v1/property_trends?{query_string}"
        
        print(f"   URL –∑–∞–ø—Ä–æ—Å–∞: {url}")
        
        response = requests.get(
            url,
            headers={
                'apikey': supabase_key,
                'Authorization': f'Bearer {supabase_key}',
                'Content-Type': 'application/json'
            },
            timeout=30
        )
        
        if response.status_code == 200:
            trends = response.json()
            print(f"   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(trends)}")
            
            if trends:
                print(f"\nüìã –î–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–µ–π:")
                for i, trend in enumerate(trends):
                    print(f"   {i+1:2d}. ID: {trend.get('id', 'N/A')} | "
                          f"–î–∞—Ç–∞: {trend.get('property_date', 'N/A')} | "
                          f"–ì–æ–¥-–º–µ—Å—è—Ü: {trend.get('property_year', 'N/A')}-{trend.get('property_month', 'N/A'):02d} | "
                          f"–ü—Ä–æ–¥–∞–∂–∞: {trend.get('unit_price_for_sale', 0):8.2f} | "
                          f"–ê—Ä–µ–Ω–¥–∞: {trend.get('unit_price_for_rent', 0):6.2f} | "
                          f"–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {trend.get('yield', 0):5.2f}%")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –º–µ—Å—è—Ü–∞–º
                print(f"\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –º–µ—Å—è—Ü–∞–º:")
                month_distribution = {}
                for trend in trends:
                    year = trend.get('property_year')
                    month = trend.get('property_month')
                    if year and month:
                        key = f"{year}-{month:02d}"
                        if key not in month_distribution:
                            month_distribution[key] = 0
                        month_distribution[key] += 1
                
                for month in sorted(month_distribution.keys(), reverse=True):
                    print(f"   {month}: {month_distribution[month]} –∑–∞–ø–∏—Å–µ–π")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
                current_date = datetime.now()
                current_year = current_date.year
                current_month = current_date.month
                
                print(f"\nüìä –ê–Ω–∞–ª–∏–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:")
                print(f"   –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date.strftime('%Y-%m-%d')}")
                print(f"   –¢–µ–∫—É—â–∏–π –≥–æ–¥-–º–µ—Å—è—Ü: {current_year}-{current_month:02d}")
                
                # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
                visible_count = 0
                future_count = 0
                
                for trend in trends:
                    year = trend.get('property_year')
                    month = trend.get('property_month')
                    
                    if year and month:
                        if year < current_year:
                            visible_count += 1  # –ü—Ä–æ—à–ª—ã–µ –≥–æ–¥—ã
                        elif year == current_year:
                            if month <= current_month:
                                visible_count += 1  # –¢–µ–∫—É—â–∏–π –≥–æ–¥, –º–µ—Å—è—Ü <= —Ç–µ–∫—É—â–µ–≥–æ
                            else:
                                future_count += 1  # –¢–µ–∫—É—â–∏–π –≥–æ–¥, –º–µ—Å—è—Ü > —Ç–µ–∫—É—â–µ–≥–æ
                        else:
                            future_count += 1  # –ë—É–¥—É—â–∏–µ –≥–æ–¥—ã
                
                print(f"   –ó–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–¥–æ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞): {visible_count}")
                print(f"   –ó–∞–ø–∏—Å–µ–π –±—É–¥—É—â–∏—Ö –º–µ—Å—è—Ü–µ–≤ (—Å–∫—Ä—ã—Ç–æ): {future_count}")
                
                # –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
                print(f"\nüìã –ò–¢–û–ì–û–í–ê–Ø –°–í–û–î–ö–ê:")
                print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –æ—Ç Supabase: {len(trends)}")
                print(f"   –ó–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è: {visible_count}")
                print(f"   –ó–∞–ø–∏—Å–µ–π –±—É–¥—É—â–∏—Ö –º–µ—Å—è—Ü–µ–≤ (—Å–∫—Ä—ã—Ç–æ): {future_count}")
                
                if len(trends) > visible_count:
                    print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í —Ç–∞–±–ª–∏—Ü–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è {visible_count} –∑–∞–ø–∏—Å–µ–π –∏–∑ {len(trends)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö!")
                    print(f"   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ {len(trends) - visible_count} –∑–∞–ø–∏—Å–µ–π —Å–∫—Ä—ã—Ç–æ —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –¥–∞—Ç–∞–º.")
                
            else:
                print("   ‚ö†Ô∏è –ó–∞–ø–∏—Å–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"   üìä –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    print(f"\nüìä 3. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã property_trends:")
    
    try:
        response = requests.get(
            f"{supabase_url}/rest/v1/property_trends?select=*&limit=1",
            headers={
                'apikey': supabase_key,
                'Authorization': f'Bearer {supabase_key}',
                'Content-Type': 'application/json'
            },
            timeout=30
        )
        
        if response.status_code == 200:
            data = response.json()
            if data:
                sample_record = data[0]
                print(f"   –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏:")
                for key, value in sample_record.items():
                    print(f"     {key}: {type(value).__name__} = {value}")
            else:
                print("   –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 80)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    test_property_trends_supabase()

