#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ webapp_region_analytics.html
–£–¥–∞–ª—è–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–π –∫–æ–¥ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã data-i18n
"""

import re
from bs4 import BeautifulSoup

def fix_region_analytics_file():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª webapp_region_analytics.html"""
    
    filename = 'webapp_region_analytics.html'
    
    print(f"üîç –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª: {filename}")
    
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü–∞—Ä—Å–∏–º HTML
        soup = BeautifulSoup(content, 'html.parser')
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã data-i18n –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º
        translations_map = {
            'pageDescription': 'reports.page_description',
            'countryLabel': 'reports.country_label',
            'cityLabel': 'reports.city_label',
            'countyLabel': 'reports.county_label',
            'districtLabel': 'reports.district_label',
            'countryPlaceholder': 'reports.country_placeholder',
            'cityPlaceholder': 'reports.city_placeholder',
            'countyPlaceholder': 'reports.county_placeholder',
            'districtPlaceholder': 'reports.district_placeholder',
            'confirmButtonText': 'reports.confirm_selection',
            'backButton': 'reports.back_to_main',
            'selectedLocationTitle': 'reports.selected_location',
            'adminIdsTitle': 'reports.admin_ids',
            'dataSectionTitle': 'reports.data_section_title',
            'generalDataTitle': 'reports.general_data_title',
            'houseTypeDataTitle': 'reports.house_type_data_title',
            'floorSegmentDataTitle': 'reports.floor_segment_data_title',
            'ageDataTitle': 'reports.age_data_title',
            'heatingDataTitle': 'reports.heating_data_title',
            'loadingText': 'reports.loading_text',
            'errorText': 'reports.error_text',
            'totalProperties': 'reports.total_properties',
            'averagePrice': 'reports.average_price',
            'priceRange': 'reports.price_range',
            'noDataAvailable': 'reports.no_data_available',
            'keyMetricsTitle': 'reports.key_metrics_title',
            'avgSalePriceLabel': 'reports.avg_sale_price_label',
            'avgRentPriceLabel': 'reports.avg_rent_price_label',
            'listingPeriodSaleLabel': 'reports.listing_period_sale_label',
            'listingPeriodRentLabel': 'reports.listing_period_rent_label',
            'yieldLabel': 'reports.yield_label',
            'insightsTitle': 'reports.insights_title',
            'insightsLoadingText': 'reports.insights_loading',
            'insightsErrorText': 'reports.insights_error'
        }
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã data-i18n –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –ø–æ ID
        for element_id, translation_key in translations_map.items():
            element = soup.find(id=element_id)
            if element and not element.get('data-i18n'):
                element['data-i18n'] = translation_key
                print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∞—Ç—Ä–∏–±—É—Ç data-i18n: {element_id} ‚Üí {translation_key}")
        
        # –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–π JavaScript –∫–æ–¥ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        # –ò—â–µ–º –∏ —É–¥–∞–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é updatePageText –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–π –∫–æ–¥
        script_content = str(soup.find('script'))
        
        # –£–¥–∞–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é updatePageText
        script_content = re.sub(r'function updatePageText\(\) \{.*?\}', '', script_content, flags=re.DOTALL)
        
        # –£–¥–∞–ª—è–µ–º –≤—ã–∑–æ–≤—ã updatePageText
        script_content = re.sub(r'updatePageText\(\);', '', script_content)
        
        # –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç translations
        script_content = re.sub(r'const translations = \{.*?\};', '', script_content, flags=re.DOTALL)
        
        # –£–¥–∞–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é getText
        script_content = re.sub(r'function getText\(key\) \{.*?\}', '', script_content, flags=re.DOTALL)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º script —Ç–µ–≥
        script_tag = soup.find('script')
        if script_tag:
            script_tag.string = script_content
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        with open(filename, 'w', encoding='utf-8') as f:
            f.write(str(soup))
        
        print(f"  ‚úÖ –§–∞–π–ª {filename} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
        print("  ‚úÖ –£–¥–∞–ª–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–π –∫–æ–¥ –ø–µ—Ä–µ–≤–æ–¥–æ–≤")
        print("  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∞—Ç—Ä–∏–±—É—Ç—ã data-i18n")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {filename}: {e}")

if __name__ == "__main__":
    fix_region_analytics_file()
