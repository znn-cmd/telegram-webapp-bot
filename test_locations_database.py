#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∏—Å–∫–∞ –ª–æ–∫–∞—Ü–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
from dotenv import load_dotenv
from supabase import create_client, Client

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase
url = os.environ.get("SUPABASE_URL")
key = os.environ.get("SUPABASE_ANON_KEY")
supabase: Client = create_client(url, key)

def extract_location_from_address(address):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –≥–æ—Ä–æ–¥, —Ä–∞–π–æ–Ω –∏ –æ–∫—Ä—É–≥ –∏–∑ –∞–¥—Ä–µ—Å–∞
    """
    try:
        address_parts = address.split(',')
        
        location_data = {
            'city_name': None,
            'district_name': None,
            'county_name': None,
            'country_name': 'Turkey'
        }
        
        if len(address_parts) >= 3:
            if 'Muratpa≈üa/Antalya' in address_parts[1]:
                location_data['city_name'] = 'Antalya'
                location_data['county_name'] = 'Muratpa≈üa'
                location_data['district_name'] = address_parts[0].strip()
            elif 'Alanya/Antalya' in address_parts[2]:
                location_data['city_name'] = 'Antalya'
                location_data['county_name'] = 'Alanya'
                location_data['district_name'] = address_parts[0].strip()
            else:
                location_data['city_name'] = address_parts[0].strip()
                location_data['county_name'] = address_parts[1].strip()
                district_name = address_parts[2].strip()
                district_name = district_name.replace(' Mah.', '').replace(' Mahallesi', '').replace(' Sok.', '').replace(' Sk.', '')
                location_data['district_name'] = district_name
                
        elif len(address_parts) >= 2:
            location_data['district_name'] = address_parts[0].strip()
            location_data['city_name'] = address_parts[1].strip()
        
        if not location_data['city_name']:
            location_data['city_name'] = 'Alanya'
        if not location_data['district_name']:
            location_data['district_name'] = 'Avsallar'
        if not location_data['county_name']:
            location_data['county_name'] = 'Antalya'
        
        return location_data
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ –∞–¥—Ä–µ—Å–∞: {e}")
        return {
            'city_name': 'Alanya',
            'district_name': 'Avsallar', 
            'county_name': 'Antalya'
        }

def get_location_codes_from_address(address):
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã locations –ø–æ –∞–¥—Ä–µ—Å—É"""
    try:
        location_info = extract_location_from_address(address)
        if not location_info:
            return None
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        if location_info.get('country_name') == 'Turkey':
            location_info['country_name'] = 'T√ºrkiye'
        
        print(f"–ò—â–µ–º –ª–æ–∫–∞—Ü–∏—é –≤ –±–∞–∑–µ: {location_info}")
        
        # –ò—â–µ–º –≤ —Ç–∞–±–ª–∏—Ü–µ locations - —Å–Ω–∞—á–∞–ª–∞ –ø–æ —Ç–æ—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é
        query = supabase.table('locations').select('*')
        
        if location_info.get('city_name'):
            query = query.eq('city_name', location_info['city_name'])
        if location_info.get('county_name'):
            query = query.eq('county_name', location_info['county_name'])
        if location_info.get('district_name'):
            query = query.eq('district_name', location_info['district_name'])
        if location_info.get('country_name'):
            query = query.eq('country_name', location_info['country_name'])
        
        result = query.execute()
        
        if result.data and len(result.data) > 0:
            location = result.data[0]
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ª–æ–∫–∞—Ü–∏—è (—Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ): {location}")
            return {
                'city_id': location['city_id'],
                'county_id': location['county_id'],
                'district_id': location['district_id'],
                'country_id': location['country_id'],
                'city_name': location['city_name'],
                'county_name': location['county_name'],
                'district_name': location['district_name'],
                'country_name': location['country_name']
            }
        
        # –ï—Å–ª–∏ —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ district_name –∏ city_name
        print("–¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—â–µ–º –ø–æ district_name –∏ city_name")
        query = supabase.table('locations').select('*')
        if location_info.get('district_name'):
            query = query.eq('district_name', location_info['district_name'])
        if location_info.get('city_name'):
            query = query.eq('city_name', location_info['city_name'])
        
        result = query.execute()
        
        if result.data and len(result.data) > 0:
            location = result.data[0]
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ª–æ–∫–∞—Ü–∏—è –ø–æ district_name –∏ city_name: {location}")
            return {
                'city_id': location['city_id'],
                'county_id': location['county_id'],
                'district_id': location['district_id'],
                'country_id': location['country_id'],
                'city_name': location['city_name'],
                'county_name': location['county_name'],
                'district_name': location['district_name'],
                'country_name': location['country_name']
            }
        
        # –ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –∏—â–µ–º —Ç–æ–ª—å–∫–æ –ø–æ district_name
        print("–ò—â–µ–º —Ç–æ–ª—å–∫–æ –ø–æ district_name")
        query = supabase.table('locations').select('*')
        if location_info.get('district_name'):
            query = query.eq('district_name', location_info['district_name'])
        
        result = query.execute()
        
        if result.data and len(result.data) > 0:
            location = result.data[0]
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ª–æ–∫–∞—Ü–∏—è –ø–æ district_name: {location}")
            return {
                'city_id': location['city_id'],
                'county_id': location['county_id'],
                'district_id': location['district_id'],
                'country_id': location['country_id'],
                'city_name': location['city_name'],
                'county_name': location['county_name'],
                'district_name': location['district_name'],
                'country_name': location['country_name']
            }
        
        print(f"‚ùå –õ–æ–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è: {location_info}")
        return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–æ–≤ –ª–æ–∫–∞—Ü–∏–π: {e}")
        return None

def test_locations_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ –ª–æ–∫–∞—Ü–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    test_addresses = [
        "Avsallar, Cengiz Akay Sk. No:12, 07410 Alanya/Antalya, T√ºrkiye",
        "Zerdalilik, 07100 Muratpa≈üa/Antalya, T√ºrkiye"
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ª–æ–∫–∞—Ü–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n")
    
    for i, address in enumerate(test_addresses, 1):
        print(f"–¢–µ—Å—Ç {i}: {address}")
        print("-" * 60)
        
        result = get_location_codes_from_address(address)
        
        if result:
            print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            print(f"  - Country ID: {result.get('country_id')}")
            print(f"  - City ID: {result.get('city_id')}")
            print(f"  - District ID: {result.get('district_id')}")
            print(f"  - County ID: {result.get('county_id')}")
            print(f"  - Country: {result.get('country_name')}")
            print(f"  - City: {result.get('city_name')}")
            print(f"  - District: {result.get('district_name')}")
            print(f"  - County: {result.get('county_name')}")
        else:
            print("‚ùå –õ–æ–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        print("\n" + "=" * 60 + "\n")

if __name__ == "__main__":
    test_locations_search() 