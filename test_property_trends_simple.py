#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API endpoint /api/property_trends
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π —á–µ—Ä–µ–∑ HTTP –∑–∞–ø—Ä–æ—Å
"""

import requests
import json
from datetime import datetime

def test_property_trends_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoint /api/property_trends"""
    
    # URL API (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
    api_url = "http://localhost:5000/api/property_trends"
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
    location_data = {
        "country_id": 1,
        "city_id": 7,
        "county_id": 2038,
        "district_id": 2339
    }
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint /api/property_trends")
    print(f"üìç –õ–æ–∫–∞—Ü–∏—è: {json.dumps(location_data, indent=2)}")
    print(f"üåê API URL: {api_url}")
    print("=" * 80)
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å
        print("üì° –û—Ç–ø—Ä–∞–≤–∫–∞ POST –∑–∞–ø—Ä–æ—Å–∞...")
        response = requests.post(
            api_url,
            json=location_data,
            headers={'Content-Type': 'application/json'},
            timeout=30
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìä –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API")
            print(f"üìä –î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:")
            print(f"   success: {data.get('success')}")
            print(f"   count: {data.get('count')}")
            
            trends = data.get('trends', [])
            print(f"   trends array length: {len(trends)}")
            
            if trends:
                print(f"\nüìã –î–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–µ–π:")
                for i, trend in enumerate(trends):
                    print(f"   {i+1:2d}. ID: {trend.get('id', 'N/A')} | "
                          f"–î–∞—Ç–∞: {trend.get('date', 'N/A')} | "
                          f"–ì–æ–¥-–º–µ—Å—è—Ü: {trend.get('property_year', 'N/A')}-{trend.get('property_month', 'N/A'):02d} | "
                          f"–ü—Ä–æ–¥–∞–∂–∞: {trend.get('unit_price_for_sale', 0):8.2f} | "
                          f"–ê—Ä–µ–Ω–¥–∞: {trend.get('unit_price_for_rent', 0):6.2f} | "
                          f"–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å: {trend.get('yield', 0):5.2f}%")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –º–µ—Å—è—Ü–∞–º
                print(f"\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –º–µ—Å—è—Ü–∞–º:")
                month_distribution = {}
                for trend in trends:
                    year = trend.get('property_year')
                    month = trend.get('property_month')
                    if year and month:
                        key = f"{year}-{month:02d}"
                        if key not in month_distribution:
                            month_distribution[key] = 0
                        month_distribution[key] += 1
                
                for month in sorted(month_distribution.keys(), reverse=True):
                    print(f"   {month}: {month_distribution[month]} –∑–∞–ø–∏—Å–µ–π")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
                current_date = datetime.now()
                current_year = current_date.year
                current_month = current_date.month
                
                print(f"\nüìä –ê–Ω–∞–ª–∏–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:")
                print(f"   –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date.strftime('%Y-%m-%d')}")
                print(f"   –¢–µ–∫—É—â–∏–π –≥–æ–¥-–º–µ—Å—è—Ü: {current_year}-{current_month:02d}")
                
                # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
                visible_count = 0
                future_count = 0
                
                for trend in trends:
                    year = trend.get('property_year')
                    month = trend.get('property_month')
                    
                    if year and month:
                        if year < current_year:
                            visible_count += 1  # –ü—Ä–æ—à–ª—ã–µ –≥–æ–¥—ã
                        elif year == current_year:
                            if month <= current_month:
                                visible_count += 1  # –¢–µ–∫—É—â–∏–π –≥–æ–¥, –º–µ—Å—è—Ü <= —Ç–µ–∫—É—â–µ–≥–æ
                            else:
                                future_count += 1  # –¢–µ–∫—É—â–∏–π –≥–æ–¥, –º–µ—Å—è—Ü > —Ç–µ–∫—É—â–µ–≥–æ
                        else:
                            future_count += 1  # –ë—É–¥—É—â–∏–µ –≥–æ–¥—ã
                
                print(f"   –ó–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–¥–æ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞): {visible_count}")
                print(f"   –ó–∞–ø–∏—Å–µ–π –±—É–¥—É—â–∏—Ö –º–µ—Å—è—Ü–µ–≤ (—Å–∫—Ä—ã—Ç–æ): {future_count}")
                
                # –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
                print(f"\nüìã –ò–¢–û–ì–û–í–ê–Ø –°–í–û–î–ö–ê:")
                print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –æ—Ç API: {len(trends)}")
                print(f"   –ó–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è: {visible_count}")
                print(f"   –ó–∞–ø–∏—Å–µ–π –±—É–¥—É—â–∏—Ö –º–µ—Å—è—Ü–µ–≤ (—Å–∫—Ä—ã—Ç–æ): {future_count}")
                
                if len(trends) > visible_count:
                    print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í —Ç–∞–±–ª–∏—Ü–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è {visible_count} –∑–∞–ø–∏—Å–µ–π –∏–∑ {len(trends)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö!")
                    print(f"   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ {len(trends) - visible_count} –∑–∞–ø–∏—Å–µ–π —Å–∫—Ä—ã—Ç–æ —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –¥–∞—Ç–∞–º.")
                
            else:
                print("‚ö†Ô∏è –ú–∞—Å—Å–∏–≤ trends –ø—É—Å—Ç –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            try:
                error_data = response.json()
                print(f"üìä –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {json.dumps(error_data, indent=2)}")
            except:
                print(f"üìä –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: {response.text}")
                
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API —Å–µ—Ä–≤–µ—Ä—É")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:", api_url)
        
    except requests.exceptions.Timeout:
        print("‚ùå –û—à–∏–±–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞: –ó–∞–ø—Ä–æ—Å –ø—Ä–µ–≤—ã—Å–∏–ª –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è")
        
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    print("\n" + "=" * 80)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    test_property_trends_api()

