#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ i18n-manager.js
"""

import re
import os

def extract_translation_keys():
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –∫–ª—é—á–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –∏–∑ HTML —Ñ–∞–π–ª–æ–≤"""
    keys = set()
    
    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö data-i18n –∞—Ç—Ä–∏–±—É—Ç–æ–≤
    html_files = [f for f in os.listdir('.') if f.endswith('.html')]
    
    for html_file in html_files:
        try:
            with open(html_file, 'r', encoding='utf-8') as f:
                content = f.read()
                
            # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ data-i18n –∞—Ç—Ä–∏–±—É—Ç—ã
            matches = re.findall(r'data-i18n="([^"]+)"', content)
            keys.update(matches)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {html_file}: {e}")
    
    return sorted(list(keys))

def get_existing_keys():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–ª—é—á–∏ –∏–∑ i18n-manager.js"""
    existing_keys = set()
    
    try:
        with open('i18n-manager.js', 'r', encoding='utf-8') as f:
            content = f.read()
            
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–ª—é—á–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 'key': 'value'
        matches = re.findall(r"'([^']+)': '[^']*'", content)
        existing_keys.update(matches)
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è i18n-manager.js: {e}")
    
    return existing_keys

def generate_missing_translations():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã"""
    all_keys = extract_translation_keys()
    existing_keys = get_existing_keys()
    
    missing_keys = [key for key in all_keys if key not in existing_keys]
    
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(all_keys)} –∫–ª—é—á–µ–π –ø–µ—Ä–µ–≤–æ–¥–æ–≤")
    print(f"–°—É—â–µ—Å—Ç–≤—É–µ—Ç {len(existing_keys)} –∫–ª—é—á–µ–π")
    print(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç {len(missing_keys)} –∫–ª—é—á–µ–π")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–ª—é—á–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    categories = {}
    for key in missing_keys:
        if '.' in key:
            category, subkey = key.split('.', 1)
            if category not in categories:
                categories[category] = []
            categories[category].append(subkey)
        else:
            if 'common' not in categories:
                categories['common'] = []
            categories['common'].append(key)
    
    return categories

def main():
    print("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã...")
    
    categories = generate_missing_translations()
    
    print("\nüìù –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–ª—é—á–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
    for category, keys in categories.items():
        print(f"\n{category}:")
        for key in keys:
            print(f"  '{key}': '–ù–ï–û–ë–•–û–î–ò–ú –ü–ï–†–ï–í–û–î',")
    
    print(f"\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("–î–æ–±–∞–≤—å—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–≤–æ–¥—ã –≤ i18n-manager.js")

if __name__ == "__main__":
    main()
