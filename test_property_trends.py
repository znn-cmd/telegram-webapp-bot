#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
from supabase import create_client, Client
from dotenv import load_dotenv
import json
from datetime import datetime

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_property_trends():
    """
    –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ç–∞–±–ª–∏—Ü—ã property_trends
    """
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ property_trends")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ .env
    supabase_url = os.getenv('SUPABASE_URL')
    supabase_key = os.getenv('SUPABASE_ANON_KEY')
    
    if not supabase_url or not supabase_key:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è SUPABASE_URL –∏–ª–∏ SUPABASE_ANON_KEY")
        return
    
    print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: {supabase_url}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
        supabase: Client = create_client(supabase_url, supabase_key)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ")
        
        # 1. –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        print("\nüìä 1. –û–ë–©–ï–ï –ö–û–õ–ò–ß–ï–°–¢–í–û –ó–ê–ü–ò–°–ï–ô")
        print("-" * 30)
        try:
            total_count_query = supabase.table('property_trends').select('id', count='exact')
            total_count_response = total_count_query.execute()
            total_count = total_count_response.count if hasattr(total_count_response, 'count') else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
            print(f"üîç –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ property_trends: {total_count}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π: {e}")
        
        # 2. –ü–æ–ª—É—á–∏–º –ø–µ—Ä–≤—ã–µ 10 –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        print("\nüìã 2. –°–¢–†–£–ö–¢–£–†–ê –î–ê–ù–ù–´–• (–ø–µ—Ä–≤—ã–µ 10 –∑–∞–ø–∏—Å–µ–π)")
        print("-" * 30)
        try:
            sample_query = supabase.table('property_trends').select('*').limit(10)
            sample_response = sample_query.execute()
            
            if sample_response.data and len(sample_response.data) > 0:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(sample_response.data)} –∑–∞–ø–∏—Å–µ–π")
                print("\nüîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–π –∑–∞–ø–∏—Å–∏:")
                first_record = sample_response.data[0]
                for key, value in first_record.items():
                    print(f"  {key}: {value} (—Ç–∏–ø: {type(value).__name__})")
                
                print("\nüìä –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö:")
                for i, record in enumerate(sample_response.data[:3]):
                    print(f"\n  –ó–∞–ø–∏—Å—å {i+1}:")
                    print(f"    ID: {record.get('id')}")
                    print(f"    country_id: {record.get('country_id')}")
                    print(f"    city_id: {record.get('city_id')}")
                    print(f"    county_id: {record.get('county_id')}")
                    print(f"    district_id: {record.get('district_id')}")
                    print(f"    property_year: {record.get('property_year')}")
                    print(f"    property_month: {record.get('property_month')}")
                    print(f"    unit_price_for_sale: {record.get('unit_price_for_sale')}")
                    print(f"    unit_price_for_rent: {record.get('unit_price_for_rent')}")
            else:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—Ä–∞–∑—Ü–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {e}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è country_id
        print("\nüåç 3. –£–ù–ò–ö–ê–õ–¨–ù–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø country_id")
        print("-" * 30)
        try:
            countries_query = supabase.table('property_trends').select('country_id').limit(100)
            countries_response = countries_query.execute()
            
            if countries_response.data:
                unique_countries = list(set([r.get('country_id') for r in countries_response.data if r.get('country_id') is not None]))
                print(f"üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ country_id: {sorted(unique_countries)}")
                
                # –ü–æ–¥—Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ country_id
                country_counts = {}
                for record in countries_response.data:
                    country_id = record.get('country_id')
                    if country_id is not None:
                        country_counts[country_id] = country_counts.get(country_id, 0) + 1
                
                print("\nüìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –ø–æ —Å—Ç—Ä–∞–Ω–∞–º:")
                for country_id, count in sorted(country_counts.items()):
                    print(f"  country_id={country_id}: {count} –∑–∞–ø–∏—Å–µ–π")
            else:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å country_id –∏–∑ —Ç–∞–±–ª–∏—Ü—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è country_id: {e}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏ (–∏–∑ –ª–æ–≥–∞)
        print("\nüéØ 4. –ü–†–û–í–ï–†–ö–ê –ö–û–ù–ö–†–ï–¢–ù–û–ô –õ–û–ö–ê–¶–ò–ò")
        print("-" * 30)
        target_location = {
            'country_id': 1,
            'city_id': 7,
            'county_id': 2037,
            'district_id': 2285
        }
        
        print(f"üîç –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏: {target_location}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—à–∞–≥–æ–≤–æ
        for level, (key, value) in enumerate(target_location.items()):
            print(f"\n  –£—Ä–æ–≤–µ–Ω—å {level+1}: {key} = {value}")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —Å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
            query = supabase.table('property_trends').select('*')
            for i, (k, v) in enumerate(list(target_location.items())[:level+1]):
                query = query.eq(k, v)
            
            try:
                response = query.limit(5).execute()
                count = len(response.data) if response.data else 0
                print(f"    ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {count}")
                
                if response.data and count > 0:
                    print(f"    üìã –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏:")
                    sample = response.data[0]
                    print(f"      ID: {sample.get('id')}")
                    print(f"      country_id: {sample.get('country_id')}")
                    print(f"      city_id: {sample.get('city_id')}")
                    print(f"      county_id: {sample.get('county_id')}")
                    print(f"      district_id: {sample.get('district_id')}")
                    print(f"      property_year: {sample.get('property_year')}")
                    print(f"      property_month: {sample.get('property_month')}")
                    print(f"      unit_price_for_sale: {sample.get('unit_price_for_sale')}")
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        # 5. –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¢—É—Ä—Ü–∏–∏
        print("\nüáπüá∑ 5. –ü–û–ò–°–ö –î–ê–ù–ù–´–• –î–õ–Ø –¢–£–†–¶–ò–ò")
        print("-" * 30)
        try:
            # –ò—â–µ–º –ª—é–±—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è country_id = 1
            turkey_query = supabase.table('property_trends').select('*').eq('country_id', 1).limit(10)
            turkey_response = turkey_query.execute()
            
            if turkey_response.data and len(turkey_response.data) > 0:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(turkey_response.data)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –¢—É—Ä—Ü–∏–∏")
                print("\nüìã –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:")
                for i, record in enumerate(turkey_response.data[:3]):
                    print(f"\n  –ó–∞–ø–∏—Å—å {i+1}:")
                    print(f"    ID: {record.get('id')}")
                    print(f"    city_id: {record.get('city_id')}")
                    print(f"    county_id: {record.get('county_id')}")
                    print(f"    district_id: {record.get('district_id')}")
                    print(f"    property_year: {record.get('property_year')}")
                    print(f"    property_month: {record.get('property_month')}")
                    print(f"    unit_price_for_sale: {record.get('unit_price_for_sale')}")
            else:
                print("‚ö†Ô∏è –î–ª—è –¢—É—Ä—Ü–∏–∏ (country_id=1) –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¢—É—Ä—Ü–∏–∏: {e}")
        
        # 6. –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ —Å –¥—Ä—É–≥–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        print("\nüîç 6. –ü–û–ò–°–ö –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–• –ó–ù–ê–ß–ï–ù–ò–ô")
        print("-" * 30)
        try:
            # –ò—â–µ–º –ª—é–±—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –Ω–µ–ø—É—Å—Ç—ã–º–∏ city_id
            cities_query = supabase.table('property_trends').select('city_id').not_.is_('city_id', 'null').limit(20)
            cities_response = cities_query.execute()
            
            if cities_response.data:
                unique_cities = list(set([r.get('city_id') for r in cities_response.data if r.get('city_id') is not None]))
                print(f"üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ city_id: {sorted(unique_cities)}")
                
                # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ city_id = 7
                if 7 in unique_cities:
                    print("‚úÖ city_id = 7 –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ!")
                else:
                    print("‚ö†Ô∏è city_id = 7 –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
            else:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å city_id –∏–∑ —Ç–∞–±–ª–∏—Ü—ã")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ city_id: {e}")
        
        print("\n" + "=" * 50)
        print("üèÅ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_property_trends()

