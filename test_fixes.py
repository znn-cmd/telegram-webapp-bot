#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ app.py
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_economic_data():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from app import get_economic_data
        
        print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ get_economic_data...")
        economic_data = get_economic_data('TUR', 5)
        
        print(f"–ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã: {economic_data.get('country_code')}")
        print(f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {economic_data.get('country_name')}")
        print(f"–î–∞–Ω–Ω—ã–µ –í–í–ü: {len(economic_data.get('gdp_data', []))} –∑–∞–ø–∏—Å–µ–π")
        print(f"–î–∞–Ω–Ω—ã–µ –∏–Ω—Ñ–ª—è—Ü–∏–∏: {len(economic_data.get('inflation_data', []))} –∑–∞–ø–∏—Å–µ–π")
        print(f"–¢—Ä–µ–Ω–¥ –í–í–ü: {economic_data.get('gdp_trend', 0)}")
        print(f"–¢—Ä–µ–Ω–¥ –∏–Ω—Ñ–ª—è—Ü–∏–∏: {economic_data.get('inflation_trend', 0)}")
        
        if economic_data.get('gdp_data') and economic_data.get('inflation_data'):
            print("‚úÖ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print("‚ùå –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def test_trends_data():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–µ–Ω–¥–æ–≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"""
    try:
        from app import get_property_trends_data
        
        print("\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ get_property_trends_data...")
        trends_data, message = get_property_trends_data('Alanya', '07410 Alanya/Antalya', 'Cengiz Akay Sk. No:12')
        
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        if trends_data:
            print(f"–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –∑–∞ –º¬≤: {trends_data.get('avg_price_per_sqm', 0)}")
            print(f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω: {trends_data.get('price_change_percent', 0)}%")
            print(f"–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã: {trends_data.get('rental_yield', 0)}%")
            print("‚úÖ –î–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥–æ–≤ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print("‚ùå –î–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥–æ–≤ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç—Ä–µ–Ω–¥–æ–≤: {e}")
        return False

def test_chart_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤"""
    try:
        from app import create_economic_chart_data, create_chart_image_for_pdf
        
        print("\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_economic_data = {
            'gdp_data': [
                {'year': 2020, 'value': -1.2},
                {'year': 2021, 'value': 11.4},
                {'year': 2022, 'value': 5.6},
                {'year': 2023, 'value': 4.5},
                {'year': 2024, 'value': 4.1}
            ],
            'inflation_data': [
                {'year': 2020, 'value': 12.3},
                {'year': 2021, 'value': 19.6},
                {'year': 2022, 'value': 72.3},
                {'year': 2023, 'value': 64.8},
                {'year': 2024, 'value': 58.2}
            ],
            'country_name': 'Turkey',
            'country_code': 'TUR',
            'gdp_trend': 2.1,
            'inflation_trend': -5.2
        }
        
        # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
        chart_data = create_economic_chart_data(test_economic_data)
        print(f"–°–æ–∑–¥–∞–Ω –≥—Ä–∞—Ñ–∏–∫ –í–í–ü: {len(chart_data['gdp_chart']['labels'])} —Ç–æ—á–µ–∫")
        print(f"–°–æ–∑–¥–∞–Ω –≥—Ä–∞—Ñ–∏–∫ –∏–Ω—Ñ–ª—è—Ü–∏–∏: {len(chart_data['inflation_chart']['labels'])} —Ç–æ—á–µ–∫")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è PDF
        chart_image = create_chart_image_for_pdf(chart_data, "–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä–∞—Ñ–∏–∫")
        if chart_image:
            print("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print("‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–æ–≤: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ app.py")
    print("=" * 50)
    
    tests = [
        test_economic_data,
        test_trends_data,
        test_chart_creation
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        try:
            if test():
                passed += 1
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
    
    print("\n" + "=" * 50)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 