#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
"""

import requests
import json
import time

def test_server():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞")
    print("=" * 40)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞...")
    try:
        response = requests.get('http://localhost:5000/health', timeout=5)
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:5000")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: python app.py")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–æ–∫–æ–¥–∏–Ω–≥–∞
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–æ–∫–æ–¥–∏–Ω–≥–∞...")
    test_address = "Baraj, 5890. Sk. No:584, 07320 Kepez/Antalya"
    
    try:
        response = requests.post(
            'http://localhost:5000/api/geocode',
            json={'address': test_address},
            timeout=10
        )
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                print("‚úÖ –ì–µ–æ–∫–æ–¥–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print(f"   –ê–¥—Ä–µ—Å: {data.get('formatted_address')}")
                print(f"   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {data.get('lat')}, {data.get('lng')}")
                if data.get('location_codes'):
                    print(f"   –ö–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π: {data.get('location_codes')}")
                else:
                    print("   ‚ö†Ô∏è –ö–æ–¥—ã –ª–æ–∫–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            else:
                print("‚ùå –ì–µ–æ–∫–æ–¥–∏–Ω–≥ –Ω–µ —É–¥–∞–ª—Å—è")
                print(f"   –û—à–∏–±–∫–∞: {data.get('error')}")
                return False
        else:
            print(f"‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥ {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≥–µ–æ–∫–æ–¥–∏–Ω–≥–∞: {e}")
        return False
    
    print("\n" + "=" * 40)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == "__main__":
    success = test_server()
    if not success:
        print("\n‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   1. –ó–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä: python app.py")
        print("   2. –ù–µ—Ç –ª–∏ –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞")
        print("   3. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
