#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import json
from datetime import datetime

# URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
BASE_URL = "http://localhost:5000"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL

def add_test_reports():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º telegram_id –∏–∑ –ª–æ–≥–æ–≤
    test_telegram_id = 1952374904
    
    print("üß™ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤")
    print(f"üì± Telegram ID: {test_telegram_id}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã
    test_reports = [
        {
            "title": "–ê–Ω–∞–ª–∏–∑ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ —Ü–µ–Ω—Ç—Ä–µ",
            "report_type": "property_analysis",
            "description": "–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞",
            "address": "—É–ª. –õ–µ–Ω–∏–Ω–∞, 15, –ú–æ—Å–∫–≤–∞",
            "price": 8500000,
            "area": 75.5,
            "bedrooms": 2,
            "report_url": "https://example.com/report1.html"
        },
        {
            "title": "–û—Ü–µ–Ω–∫–∞ –¥–æ–º–∞ –≤ –ø—Ä–∏–≥–æ—Ä–æ–¥–µ",
            "report_type": "property_evaluation",
            "description": "–û—Ü–µ–Ω–∫–∞ –∑–∞–≥–æ—Ä–æ–¥–Ω–æ–≥–æ –¥–æ–º–∞",
            "address": "–ü–æ–¥–º–æ—Å–∫–æ–≤—å–µ, –¥. –ò–≤–∞–Ω–æ–≤–æ, —É–ª. –°–∞–¥–æ–≤–∞—è, 8",
            "price": 25000000,
            "area": 150.0,
            "bedrooms": 4,
            "report_url": "https://example.com/report2.html"
        },
        {
            "title": "–†—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–∞–π–æ–Ω–∞",
            "report_type": "market_analysis",
            "description": "–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ —Ä–∞–π–æ–Ω–µ",
            "address": "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω, –ú–æ—Å–∫–≤–∞",
            "price": None,
            "area": None,
            "bedrooms": None,
            "report_url": "https://example.com/report3.html"
        }
    ]
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º user_id
        user_response = requests.post(
            f"{BASE_URL}/api/user",
            json={
                "telegram_id": test_telegram_id,
                "username": "test_user",
                "tg_name": "Test User",
                "last_name": "Test",
                "language_code": "ru"
            },
            headers={"Content-Type": "application/json"}
        )
        
        if user_response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_response.text}")
            return
            
        user_data = user_response.json()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user_data.get('tg_name')}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã
        for i, report_data in enumerate(test_reports, 1):
            print(f"\nüìã –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ {i}...")
            
            # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞
            # –ü–æ—Å–∫–æ–ª—å–∫—É —É –Ω–∞—Å –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ API –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤,
            # –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π endpoint –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π
            
            # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ
            print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {report_data['title']}")
            print(f"  –¢–∏–ø: {report_data['report_type']}")
            print(f"  –ê–¥—Ä–µ—Å: {report_data['address']}")
            print(f"  –¶–µ–Ω–∞: {report_data['price']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def check_existing_reports():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ—Ç—á–µ—Ç—ã"""
    
    test_telegram_id = 1952374904
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –æ—Ç—á–µ—Ç–æ–≤")
    print(f"üì± Telegram ID: {test_telegram_id}")
    
    try:
        response = requests.post(
            f"{BASE_URL}/api/user_reports",
            json={"telegram_id": test_telegram_id},
            headers={"Content-Type": "application/json"}
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            reports = data.get('reports', [])
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤: {len(reports)}")
            
            if reports:
                for i, report in enumerate(reports, 1):
                    print(f"  üìã –û—Ç—á–µ—Ç {i}:")
                    print(f"    ID: {report.get('id')}")
                    print(f"    –ù–∞–∑–≤–∞–Ω–∏–µ: {report.get('title')}")
                    print(f"    –¢–∏–ø: {report.get('report_type')}")
                    print(f"    –ê–¥—Ä–µ—Å: {report.get('address')}")
                    print()
            else:
                print("‚ÑπÔ∏è –û—Ç—á–µ—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    print("üöÄ –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –æ—Ç—á–µ—Ç–∞–º–∏")
    print("=" * 50)
    
    check_existing_reports()
    # add_test_reports()  # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    
    print("\n‚úÖ –†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
