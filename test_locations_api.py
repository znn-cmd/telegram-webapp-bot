#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π API –ª–æ–∫–∞—Ü–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
"""

import requests
import json

def test_locations_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –ª–æ–∫–∞—Ü–∏–π"""
    base_url = "http://localhost:8080"  # –ò–∑–º–µ–Ω–µ–Ω –ø–æ—Ä—Ç –Ω–∞ 8080
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –õ–û–ö–ê–¶–ò–ô –° –ü–ê–ì–ò–ù–ê–¶–ò–ï–ô")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω
    print("\n1Ô∏è‚É£ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –°–¢–†–ê–ù")
    print("-" * 30)
    
    try:
        response = requests.get(f"{base_url}/api/locations/countries")
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                countries = data.get('countries', [])
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç—Ä–∞–Ω: {len(countries)}")
                for i, (country_id, country_name) in enumerate(countries):
                    print(f"   {i+1}. {country_name} (ID: {country_id})")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è –¢—É—Ä—Ü–∏–∏ (country_id = 1)
    print("\n2Ô∏è‚É£ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –ì–û–†–û–î–û–í –¢–£–†–¶–ò–ò")
    print("-" * 40)
    
    try:
        response = requests.post(f"{base_url}/api/locations/cities", 
                                json={"country_id": 1})
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                cities = data.get('cities', [])
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –≥–æ—Ä–æ–¥–æ–≤: {len(cities)}")
                print("üìã –í—Å–µ –≥–æ—Ä–æ–¥–∞ –¢—É—Ä—Ü–∏–∏:")
                for i, (city_id, city_name) in enumerate(cities):
                    print(f"   {i+1:2d}. {city_name} (ID: {city_id})")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–∫—Ä—É–≥–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    print("\n3Ô∏è‚É£ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –û–ö–†–£–ì–û–í")
    print("-" * 30)
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ä–æ–¥ D√ºzce (ID: 81)
        response = requests.post(f"{base_url}/api/locations/counties", 
                                json={"city_id": 81})
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                counties = data.get('counties', [])
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –æ–∫—Ä—É–≥–æ–≤: {len(counties)}")
                print("üìã –û–∫—Ä—É–≥–∞ –≥–æ—Ä–æ–¥–∞ D√ºzce:")
                for i, (county_id, county_name) in enumerate(counties):
                    print(f"   {i+1}. {county_name} (ID: {county_id})")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ–∫—Ä—É–≥–∞
    print("\n4Ô∏è‚É£ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –†–ê–ô–û–ù–û–í")
    print("-" * 30)
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–∫—Ä—É–≥ G√∂lyaka (ID: 1794)
        response = requests.post(f"{base_url}/api/locations/districts", 
                                json={"county_id": 1794})
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                districts = data.get('districts', [])
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ä–∞–π–æ–Ω–æ–≤: {len(districts)}")
                print("üìã –ü–µ—Ä–≤—ã–µ 15 —Ä–∞–π–æ–Ω–æ–≤ –æ–∫—Ä—É–≥–∞ G√∂lyaka:")
                for i, (district_id, district_name) in enumerate(districts[:15]):
                    print(f"   {i+1:2d}. {district_name} (ID: {district_id})")
                
                if len(districts) > 15:
                    print(f"   ... –∏ –µ—â–µ {len(districts) - 15} —Ä–∞–π–æ–Ω–æ–≤")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    test_locations_api()
