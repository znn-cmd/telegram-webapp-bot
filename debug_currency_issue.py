#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –≤–∞–ª—é—Ç–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from currency_functions import get_currency_rate_for_date, fetch_and_save_currency_rates, supabase
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

def debug_currency_issue():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –≤–∞–ª—é—Ç–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏"""
    
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –≤–∞–ª—é—Ç–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    current_date = datetime.now()
    date_str = current_date.strftime('%Y-%m-%d')
    print(f"üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {date_str}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ:")
    try:
        result = supabase.table('currency').select('*').order('created_at', desc=True).limit(5).execute()
        if result.data:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(result.data)} –∑–∞–ø–∏—Å–µ–π:")
            for i, record in enumerate(result.data, 1):
                print(f"   {i}. ID: {record.get('id')}, –î–∞—Ç–∞: {record.get('created_at')}, TRY: {record.get('try')}")
        else:
            print("‚ùå –ó–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
    print(f"\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è ({date_str}):")
    try:
        today_query = supabase.table('currency').select('*').gte('created_at', f'{date_str} 00:00:00').lt('created_at', f'{date_str} 23:59:59').execute()
        if today_query.data:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(today_query.data)} –∑–∞–ø–∏—Å–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è:")
            for record in today_query.data:
                print(f"   ID: {record.get('id')}, TRY: {record.get('try')}, USD: {record.get('usd')}, RUB: {record.get('rub')}")
        else:
            print("‚ùå –ó–∞–ø–∏—Å–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–ø–∏—Å–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
    print(f"\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç:")
    try:
        currency_rate = get_currency_rate_for_date()
        if currency_rate:
            print(f"‚úÖ –ö—É—Ä—Å –≤–∞–ª—é—Ç –ø–æ–ª—É—á–µ–Ω:")
            print(f"   EUR: {currency_rate.get('euro')}")
            print(f"   TRY: {currency_rate.get('try')}")
            print(f"   USD: {currency_rate.get('usd')}")
            print(f"   RUB: {currency_rate.get('rub')}")
            print(f"   AED: {currency_rate.get('aed')}")
            print(f"   THB: {currency_rate.get('thb')}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API –Ω–∞–ø—Ä—è–º—É—é
    print(f"\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API currencylayer.com:")
    try:
        import requests
        url = "http://api.currencylayer.com/historical"
        params = {
            'access_key': 'c61dddb55d93e77ce5a2c8b91fb22694',
            'date': date_str,
            'base': 'USD',
            'currencies': 'EUR,RUB,TRY,AED,THB'
        }
        
        print(f"üì° –ó–∞–ø—Ä–æ—Å –∫ API: {url}")
        print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {params}")
        
        response = requests.get(url, params=params)
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            if data.get('success'):
                quotes = data.get('quotes', {})
                print(f"‚úÖ API –æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–µ–Ω:")
                for quote, rate in quotes.items():
                    print(f"   {quote}: {rate}")
            else:
                print(f"‚ùå API –æ—à–∏–±–∫–∞: {data.get('error', {})}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"üìã –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    print(f"\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã currency:")
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É –∑–∞–ø–∏—Å—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        sample = supabase.table('currency').select('*').limit(1).execute()
        if sample.data:
            record = sample.data[0]
            print(f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:")
            for key, value in record.items():
                print(f"   {key}: {type(value).__name__} = {value}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±—Ä–∞–∑–µ—Ü –∑–∞–ø–∏—Å–∏")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {e}")
    
    print("\n" + "=" * 50)
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    debug_currency_issue()
